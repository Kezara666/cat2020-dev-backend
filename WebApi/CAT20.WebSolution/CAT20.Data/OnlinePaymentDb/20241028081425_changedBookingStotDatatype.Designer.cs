// <auto-generated />
using System;
using CAT20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAT20.Data.OnlinePaymentDb
{
    [DbContext(typeof(OnlinePaymentDbContext))]
    [Migration("20241028081425_changedBookingStotDatatype")]
    partial class changedBookingStotDatatype
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.BookingProperty", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_property_id");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("booking_main_property_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_main_property_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_main_property_created_by");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_main_property_name");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("booking_main_property_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_main_property_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_main_property_updated_by");

                    b.HasKey("ID");

                    b.ToTable("booking_main_property_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.BookingSubProperty", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_sub_property_id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_sub_property_address");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("booking_sub_property_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_sub_property_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_sub_property_created_by");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_sub_property_latitude");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_sub_property_longitude");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int")
                        .HasColumnName("booking_main_property_id");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("booking_sub_property_status");

                    b.Property<string>("SubPropertyName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_sub_property_name");

                    b.Property<int>("TelephoneNumber")
                        .HasColumnType("int")
                        .HasColumnName("booking_sub_property_telephone_number");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_sub_property_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_sub_property_updated_by");

                    b.HasKey("ID");

                    b.HasIndex("PropertyID");

                    b.ToTable("booking_sub_property_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.BookingTimeSlot", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_time_slot_id");

                    b.Property<int>("BookingTimeSlotStatus")
                        .HasColumnType("int")
                        .HasColumnName("booking_time_slot_status");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_time_slot_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_time_slot_created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_time_slot_description");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_time_slot_from_time");

                    b.Property<int>("OrderLevel")
                        .HasColumnType("int")
                        .HasColumnName("booking_time_slot_oreder_level");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("booking_time_slot_sabha_id");

                    b.Property<int>("SubPropertyId")
                        .HasColumnType("int")
                        .HasColumnName("booking_time_slot_subproperty_id");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("booking_time_slot_to_time");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_time_slot_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_time_slot_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("SubPropertyId");

                    b.ToTable("booking_time_slot", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.ChargingScheme", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_cs_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("booking_cs_amount");

                    b.Property<int>("ChargingType")
                        .HasColumnType("int")
                        .HasColumnName("booking_cs_charging_type");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_cs_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_cs_created_by");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("booking_cs_sabha_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("booking_cs_status");

                    b.Property<int>("SubPropertyId")
                        .HasColumnType("int")
                        .HasColumnName("booking_cs_subproperty_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_cs_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("booking_cs_updated_by");

                    b.HasKey("ID");

                    b.HasIndex("SubPropertyId");

                    b.ToTable("booking_charging_scheme", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.LogInDetails", b =>
                {
                    b.Property<int?>("logInID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Browser")
                        .HasColumnType("longtext")
                        .HasColumnName("browser");

                    b.Property<string>("BrowserVersion")
                        .HasColumnType("longtext")
                        .HasColumnName("browser_version");

                    b.Property<string>("Device")
                        .HasColumnType("longtext")
                        .HasColumnName("device");

                    b.Property<string>("DeviceType")
                        .HasColumnType("longtext")
                        .HasColumnName("device_type");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext")
                        .HasColumnName("ip_address");

                    b.Property<string>("MobileNo")
                        .HasColumnType("longtext")
                        .HasColumnName("mobile_no");

                    b.Property<string>("NIC")
                        .HasColumnType("longtext")
                        .HasColumnName("nic");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("longtext")
                        .HasColumnName("operating_system");

                    b.Property<string>("Orientation")
                        .HasColumnType("longtext")
                        .HasColumnName("orientation");

                    b.Property<string>("OsVersion")
                        .HasColumnType("longtext")
                        .HasColumnName("os_version");

                    b.Property<DateTime?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("log_in_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("logInID")
                        .HasName("log_in_id");

                    b.ToTable("logIn_details", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.OnlineBooking", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("online_booking_id");

                    b.Property<DateTime>("ApprovedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("online_booking_approved_at");

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("online_booking_approved_by");

                    b.Property<string>("BookingNotes")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("online_booking_booking_notes");

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int")
                        .HasColumnName("online_booking_status");

                    b.Property<string>("BookingTimeSlotIds")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("online_booking_booking_time_slot_ids");

                    b.Property<string>("CancellatioReason")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("online_booking_cansellation_reason");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_time_slot_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CreationDate")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("online_booking_cremation_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("online_booking_customer_id");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("online_booking_payament_status");

                    b.Property<int?>("PropertyId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("online_booking_property_id");

                    b.Property<string>("RejectionReason")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("online_booking_rejected_reason");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("online_booking_sabha_id");

                    b.Property<int>("SubPropertyId")
                        .HasColumnType("int")
                        .HasColumnName("online_booking_sub_property_id");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("online_booking_total_amount");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("online_booking_transaction_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_time_slot_updated_at");

                    b.HasKey("Id");

                    b.ToTable("online_Bookings", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.OtherDescription", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("other_description", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PaymentDetailBackUp", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PaymentDetailId")
                        .HasColumnType("int")
                        .HasColumnName("payment_detail_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("payment_detail_backup", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PaymentDetails", b =>
                {
                    b.Property<int?>("PaymentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AccountNo")
                        .HasColumnType("longtext")
                        .HasColumnName("account_no");

                    b.Property<int?>("CashierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cashier_id");

                    b.Property<DateTime?>("CashierUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("cashier_updated_at");

                    b.Property<int?>("Check")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("check");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("discount");

                    b.Property<int?>("Error")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("error");

                    b.Property<decimal?>("InputAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("input_amount");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("OfficeSessionId")
                        .HasColumnType("int")
                        .HasColumnName("office_session_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("unique_id");

                    b.Property<string>("PartnerEmail")
                        .HasColumnType("longtext")
                        .HasColumnName("partner_email_address");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("partner_id");

                    b.Property<string>("PartnerMobileNo")
                        .HasColumnType("longtext")
                        .HasColumnName("partner_mobile_no");

                    b.Property<string>("PartnerNIC")
                        .HasColumnType("longtext")
                        .HasColumnName("partner_nic");

                    b.Property<string>("PartnerName")
                        .HasColumnType("longtext")
                        .HasColumnName("partner_name");

                    b.Property<string>("ResultIndicator")
                        .HasColumnType("longtext")
                        .HasColumnName("result_indicator");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<decimal?>("ServiceCharges")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("service_charges");

                    b.Property<decimal?>("ServicePercentage")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("service_percentage");

                    b.Property<string>("SessionId")
                        .HasColumnType("longtext")
                        .HasColumnName("session_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<string>("TransactionId")
                        .HasColumnType("longtext")
                        .HasColumnName("transaction_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("PaymentDetailId");

                    b.ToTable("payment_details", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PaymentGateway", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("APIKey")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("api_key");

                    b.Property<string>("AccessKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("bank_name");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MerchantId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("merchant_id");

                    b.Property<string>("ProfileID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.Property<string>("ReportAPIKey")
                        .HasColumnType("longtext")
                        .HasColumnName("report_api_key");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ServicePercentage")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("service_percentage");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("payment_gateways", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlinePayment.Dispute", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Message")
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<int?>("PaymentDetailId")
                        .HasColumnType("int")
                        .HasColumnName("payment_detail_id");

                    b.Property<int?>("Reason")
                        .HasColumnType("int")
                        .HasColumnName("reason");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("PaymentDetailId")
                        .IsUnique();

                    b.ToTable("dispute", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.BookingSubProperty", b =>
                {
                    b.HasOne("CAT20.Core.Models.OnlienePayment.BookingProperty", "bookingProperty")
                        .WithMany("bookingSubProperties")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_booking_sub_property_booking_main_property_id");

                    b.Navigation("bookingProperty");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.BookingTimeSlot", b =>
                {
                    b.HasOne("CAT20.Core.Models.OnlienePayment.BookingSubProperty", "bookingSubProperty")
                        .WithMany("BookingTimeSlots")
                        .HasForeignKey("SubPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_booking_sub_property_booking_time_slot_id");

                    b.Navigation("bookingSubProperty");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.ChargingScheme", b =>
                {
                    b.HasOne("CAT20.Core.Models.OnlienePayment.BookingSubProperty", "BookingSubProperty")
                        .WithMany("chargingSchemes")
                        .HasForeignKey("SubPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingSubProperty");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.OtherDescription", b =>
                {
                    b.HasOne("CAT20.Core.Models.OnlienePayment.PaymentDetails", "PaymentDetails")
                        .WithOne("OtherDescription")
                        .HasForeignKey("CAT20.Core.Models.OnlienePayment.OtherDescription", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OtherDescription_Payment_Detail_Id");

                    b.Navigation("PaymentDetails");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlinePayment.Dispute", b =>
                {
                    b.HasOne("CAT20.Core.Models.OnlienePayment.PaymentDetails", "PaymentDetails")
                        .WithOne("Dispute")
                        .HasForeignKey("CAT20.Core.Models.OnlinePayment.Dispute", "PaymentDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Dispute_Payment_Detail_Id");

                    b.Navigation("PaymentDetails");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.BookingProperty", b =>
                {
                    b.Navigation("bookingSubProperties");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.BookingSubProperty", b =>
                {
                    b.Navigation("BookingTimeSlots");

                    b.Navigation("chargingSchemes");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PaymentDetails", b =>
                {
                    b.Navigation("Dispute");

                    b.Navigation("OtherDescription");
                });
#pragma warning restore 612, 618
        }
    }
}

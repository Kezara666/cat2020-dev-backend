// <auto-generated />
using System;
using CAT20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAT20.Data.ShopRentalDb
{
    [DbContext(typeof(ShopRentalDbContext))]
    [Migration("20240520060350_ShopRentalBalanceReportFieldLYFineFieldRenamedMig")]
    partial class ShopRentalBalanceReportFieldLYFineFieldRenamedMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_sinhala_ci")
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.FineCalType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_fine_cal_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sr_fine_cal_type_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_fine_cal_type_status");

                    b.HasKey("Id");

                    b.ToTable("sr_fine_cal_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.FineChargingMethod", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_fine_charging_method_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sr_fine_charging_method_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_fine_charging_method_status");

                    b.HasKey("Id");

                    b.ToTable("sr_fine_charging_method", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.FineRateType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_fine_rate_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sr_fine_rate_type_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_fine_rate_type_status");

                    b.HasKey("Id");

                    b.ToTable("sr_fine_rate_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Floor", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_floor_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sr_floor_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_floor_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_floor_created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sr_floor_name");

                    b.Property<int?>("Number")
                        .HasColumnType("int")
                        .HasColumnName("sr_floor_number");

                    b.Property<int>("RentalPlaceId")
                        .HasColumnType("int")
                        .HasColumnName("sr_floor_rental_place_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_floor_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_floor_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_floor_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("RentalPlaceId");

                    b.ToTable("sr_floor", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.OpeningBalance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_id");

                    b.Property<string>("ApproveComment")
                        .HasColumnType("longtext")
                        .HasColumnName("sr_ob_approve_comment");

                    b.Property<int>("ApproveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_approve_status")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("ApprovedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_ob_approved_at");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_approved_by");

                    b.Property<int?>("BalanceIdForCurrentBalance")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_bal_bal_id_for_current_year_bal");

                    b.Property<int?>("BalanceIdForLastYearArrears")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_bal_id_for_last_year_arrears");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_ob_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_created_by");

                    b.Property<decimal?>("CurrentRentalAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_current_rental_amount");

                    b.Property<decimal?>("CurrentServiceChargeAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_current_service_charge_amount");

                    b.Property<bool?>("IsProcessed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sr_bal_is_processed")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("LastYearArrearsAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_last_year_arrears_amount");

                    b.Property<decimal?>("LastYearFineAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_last_year_fine_amount");

                    b.Property<int>("MonthId")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_month_id");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_office_id");

                    b.Property<decimal?>("OverPaymentAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_over_payment_amount");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_property_id");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_sabha_id");

                    b.Property<decimal?>("ServiceChargeArreasAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_service_charge_arreas_amount");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_shop_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<decimal?>("ThisYearArrearsAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_this_year_arrears_amount");

                    b.Property<decimal?>("ThisYearFineAmount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_ob_this_year_fine_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_ob_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_updated_by");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_year");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("ShopId")
                        .IsUnique();

                    b.HasIndex("ShopId", "Year", "MonthId")
                        .IsUnique();

                    b.ToTable("sr_opening_balance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ProcessConfigurationSettingAssign", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_process_configuration_setting_assign_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_process_configuration_setting_assign_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_process_configuration_setting_assign_created_by");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sr_process_configuration_setting_assign_sabha_id");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("sr_process_configuration_setting_assign_shop_id");

                    b.Property<int>("ShopRentalProcessConfigarationId")
                        .HasColumnType("int")
                        .HasColumnName("sr_process_configuration_setting_assign_process_configaration_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_process_configuration_setting_assign_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_process_configuration_setting_assign_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_process_configuration_setting_assign_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("ShopId")
                        .IsUnique();

                    b.HasIndex("ShopRentalProcessConfigarationId")
                        .HasDatabaseName("IX_sr_process_configuration_setting_assign_sr_process_configur~1");

                    b.ToTable("sr_process_configuration_setting_assign", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Property", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_property_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_property_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_created_by");

                    b.Property<int?>("FloorId")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_floor_id");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_office_id");

                    b.Property<int>("PropertyNatureId")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_property_nature_id");

                    b.Property<string>("PropertyNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sr_property_no");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_property_type_id");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_sabha_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_property_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_property_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("PropertyNatureId");

                    b.HasIndex("PropertyTypeId");

                    b.HasIndex("FloorId", "PropertyNo")
                        .IsUnique();

                    b.ToTable("sr_property", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.PropertyNature", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_property_nature_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_property_nature_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_nature_created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sr_property_nature_name");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_nature_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_nature_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_property_nature_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_nature_updated_by");

                    b.HasKey("Id");

                    b.ToTable("sr_property_nature", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.PropertyType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_property_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sr_property_type_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_property_type_status");

                    b.HasKey("Id");

                    b.ToTable("sr_property_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.RentalPaymentDateType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_payment_data_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sr_rental_payment_data_type_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_payment_data_type_status");

                    b.HasKey("Id");

                    b.ToTable("sr_rental_payment_data_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.RentalPlace", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_place_id");

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sr_rental_place_address_line1");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sr_rental_place_address_line2");

                    b.Property<string>("Code")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("sr_rental_place_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_rental_place_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_place_created_by");

                    b.Property<int?>("GnDivisionId")
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_place_gn_division_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sr_rental_place_name");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_place_office_id");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_place_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_place_status");

                    b.Property<DateTime?>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Timestamp")
                        .HasColumnName("TimeStamp");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_rental_place_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_rental_place_updated_by");

                    b.HasKey("Id");

                    b.ToTable("sr_rental_place", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Shop", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_id");

                    b.Property<DateTime?>("AgreementCloseDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sr_shop_agreement_close_date");

                    b.Property<DateTime?>("AgreementEndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sr_shop_agreement_end_date");

                    b.Property<string>("AgreementNo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sr_shop_agreement_no");

                    b.Property<DateTime?>("AgreementStartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sr_shop_agreement_start_date");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sr_shop_approved_at");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_approved_by");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sr_shop_business_name");

                    b.Property<string>("BusinessNature")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sr_shop_business_nature");

                    b.Property<string>("BusinessRegistrationNo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sr_shop_business_registration_number");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_shop_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_created_by");

                    b.Property<string>("CustomerDesigntion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sr_shop_customer_designtion");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_customer_id");

                    b.Property<int?>("IsApproved")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_is_approved");

                    b.Property<decimal?>("KeyMoney")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sr_shop_key_money")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_office_id");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_property_id");

                    b.Property<decimal?>("Rental")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sr_shop_rental")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_sabha_id");

                    b.Property<decimal?>("SecurityDeposit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sr_shop_security_deposit")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("ServiceCharge")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sr_shop_service_charge")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_shop_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_shop_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("OfficeId", "AgreementNo")
                        .IsUnique();

                    b.ToTable("sr_shop", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopAgreementChangeRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_id");

                    b.Property<DateTime>("AgreementCloseDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sr_agcr_agreement_close_date");

                    b.Property<string>("ApproveComment")
                        .HasColumnType("longtext")
                        .HasColumnName("sr_agcr_approve_comment");

                    b.Property<int>("ApproveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_ob_approve_status")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("ApprovedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_agcr_approved_at");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_approved_by");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_agcr_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_created_by");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_office_id");

                    b.Property<int>("Requestedstatus")
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_requestedstatus");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_sabha_id");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_shop_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_agcr_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_agcr_updated_by");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_agcrId");

                    b.HasIndex("ShopId")
                        .IsUnique();

                    b.ToTable("sr_agreement_change_request", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalBalance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_id");

                    b.Property<decimal?>("ArrearsAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_arrears_amount");

                    b.Property<DateOnly>("BillProcessDate")
                        .HasColumnType("date")
                        .HasColumnName("sr_bal_bill_process_date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_bal_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_created_by");

                    b.Property<decimal?>("CurrentRentalAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_current_rental_amount")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("CurrentServiceChargeAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_current_service_charge_amount")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("FineAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_fine_amount");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("sr_bal_from_date");

                    b.Property<bool?>("HasTransaction")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sr_bal_has_transaction");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sr_bal_is_completed");

                    b.Property<bool?>("IsProcessed")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sr_bal_is_processed")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("LYArreas")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_ly_arreas")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("LYFine")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_ly_fine")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_month");

                    b.Property<int?>("NoOfPayments")
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_no_of_payments");

                    b.Property<decimal?>("OverPaymentAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_over_payment_amount");

                    b.Property<decimal?>("PaidArrearsAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_arrears_amount")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidCurrentRentalAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_current_rental_amount")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidCurrentServiceChargeAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_current_service_charge_amount")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidFineAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_fine_amount")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidLYArreas")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_ly_arreas")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidLYFine")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_ly_fine")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidServiceChargeArreasAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_service_charge_arreas_amount")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidTYArreas")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_ty_arreas")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("PaidTYFine")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_paid_ty_fine")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("PropertyId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_proprty_id");

                    b.Property<decimal?>("ServiceChargeArreasAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_service_charge_arreas_amount");

                    b.Property<int?>("ShopId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_shop_id");

                    b.Property<decimal?>("TYArreas")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_ty_arreas")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("TYFine")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sr_bal_ty_fine")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("sr_bal_to_date");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_bal_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_updated_by");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("sr_bal_year");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("ShopId", "Year", "Month")
                        .IsUnique();

                    b.ToTable("sr_shopRental_balance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalProcessConfigaration", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_processConfig_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_created_by");

                    b.Property<decimal?>("Fine1stMonthRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("sr_processConfig_fine_1st_month_rate")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("Fine2ndMonthRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("sr_processConfig_fine_2nd_month_rate")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal?>("Fine3rdMonthRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("sr_processConfig_fine_3rd_month_rate")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("FineCalTypeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_fine_cal_type_id");

                    b.Property<int>("FineChargingMethodId")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_fine_charging_method_id");

                    b.Property<decimal?>("FineDailyRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("sr_processConfig_fine_daily_rate")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("FineDate")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_fine_date");

                    b.Property<decimal?>("FineMonthlyRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("sr_processConfig_fine_monthly_rate")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("FineRateTypeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_fine_rate_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("sr_processConfig_group_name");

                    b.Property<int>("RentalPaymentDateTypeId")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_rental_payment_date_type_id");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_processConfig_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_processConfig_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("FineCalTypeId");

                    b.HasIndex("FineChargingMethodId");

                    b.HasIndex("FineRateTypeId");

                    b.HasIndex("RentalPaymentDateTypeId");

                    b.ToTable("sr_process_configuration", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalVoteAssign", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_vote_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_created_by");

                    b.Property<int>("LastYearArreasAmountVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_last_year_arreas_amount_id");

                    b.Property<int>("LastYearFineAmountVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_last_year_fine_id");

                    b.Property<int?>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_office_id")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("OverPaymentAmountVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_over_payment_id");

                    b.Property<int?>("PropertyId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_property_id");

                    b.Property<int>("PropertyRentalVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_property_rental_id");

                    b.Property<int?>("SabhaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_sabha_id")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("ServiceChargeAmountVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_service_charge_id");

                    b.Property<int>("ServiceChargeArreasAmountVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_service_charge_arreas_amount_id");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_shop_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_status");

                    b.Property<int>("ThisYearArrearsAmountVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_this_year_arreas_amount_id");

                    b.Property<int>("ThisYearFineAmountVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_this_year_fine_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("sr_bal_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("sr_vote_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("ShopId")
                        .IsUnique();

                    b.ToTable("sr_shopRental_vote_assign", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalVotePaymentType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sr_vt_pay_type_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sr_vt_pay_type_desc");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("sr_vt_pay_type_status");

                    b.HasKey("Id");

                    b.ToTable("sr_vote_payment_types", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Floor", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.RentalPlace", "RentalPlace")
                        .WithMany("Floors")
                        .HasForeignKey("RentalPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_floor_ibfk_1");

                    b.Navigation("RentalPlace");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.OpeningBalance", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.Property", "Property")
                        .WithMany("OpeningBalances")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_opening_balance_FK");

                    b.HasOne("CAT20.Core.Models.ShopRental.Shop", "Shop")
                        .WithOne("OpeningBalance")
                        .HasForeignKey("CAT20.Core.Models.ShopRental.OpeningBalance", "ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_opening_balance_FK_1");

                    b.Navigation("Property");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ProcessConfigurationSettingAssign", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.Shop", "Shop")
                        .WithOne("ProcessConfigurationSettingAssign")
                        .HasForeignKey("CAT20.Core.Models.ShopRental.ProcessConfigurationSettingAssign", "ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_process_configuration_setting_assign_ibfk_1");

                    b.HasOne("CAT20.Core.Models.ShopRental.ShopRentalProcessConfigaration", "ShopRentalProcessConfigaration")
                        .WithMany("ProcessConfigurationSettingAssigns")
                        .HasForeignKey("ShopRentalProcessConfigarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_process_configuration_setting_assign_ibfk_2");

                    b.Navigation("Shop");

                    b.Navigation("ShopRentalProcessConfigaration");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Property", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.Floor", "Floor")
                        .WithMany("Properties")
                        .HasForeignKey("FloorId")
                        .HasConstraintName("sr_floor_idfk_3");

                    b.HasOne("CAT20.Core.Models.ShopRental.PropertyNature", "PropertyNature")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_property_natureidfk_3");

                    b.HasOne("CAT20.Core.Models.ShopRental.PropertyType", "PropertyType")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_property_ibfk_3");

                    b.Navigation("Floor");

                    b.Navigation("PropertyNature");

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Shop", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.Property", "Property")
                        .WithMany("Shops")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("sr_shop_ibfk_3");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopAgreementChangeRequest", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.Shop", "Shop")
                        .WithOne("ShopAgreementChangeRequest")
                        .HasForeignKey("CAT20.Core.Models.ShopRental.ShopAgreementChangeRequest", "ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_agcr_shop_FK");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalBalance", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.Property", "Property")
                        .WithMany("Balances")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_bal_FK_property");

                    b.HasOne("CAT20.Core.Models.ShopRental.Shop", "Shop")
                        .WithMany("Balances")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_bal_FK_shop");

                    b.Navigation("Property");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalProcessConfigaration", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.FineCalType", "FineCalType")
                        .WithMany("ShopRentalProcessConfigarations")
                        .HasForeignKey("FineCalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_processConfig_ibfk_2");

                    b.HasOne("CAT20.Core.Models.ShopRental.FineChargingMethod", "FineChargingMethod")
                        .WithMany("ShopRentalProcessConfigarations")
                        .HasForeignKey("FineChargingMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_processConfig_ibfk_4");

                    b.HasOne("CAT20.Core.Models.ShopRental.FineRateType", "FineRateType")
                        .WithMany("ShopRentalProcessConfigarations")
                        .HasForeignKey("FineRateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_processConfig_ibfk_1");

                    b.HasOne("CAT20.Core.Models.ShopRental.RentalPaymentDateType", "RentalPaymentDateType")
                        .WithMany("ShopRentalProcessConfigarations")
                        .HasForeignKey("RentalPaymentDateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_processConfig_ibfk_3");

                    b.Navigation("FineCalType");

                    b.Navigation("FineChargingMethod");

                    b.Navigation("FineRateType");

                    b.Navigation("RentalPaymentDateType");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalVoteAssign", b =>
                {
                    b.HasOne("CAT20.Core.Models.ShopRental.Property", "Property")
                        .WithMany("ShopRentalVoteAssigns")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_vote_FK_property");

                    b.HasOne("CAT20.Core.Models.ShopRental.Shop", "Shop")
                        .WithOne("VoteAssign")
                        .HasForeignKey("CAT20.Core.Models.ShopRental.ShopRentalVoteAssign", "ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sr_vote_Fk_shop");

                    b.Navigation("Property");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.FineCalType", b =>
                {
                    b.Navigation("ShopRentalProcessConfigarations");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.FineChargingMethod", b =>
                {
                    b.Navigation("ShopRentalProcessConfigarations");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.FineRateType", b =>
                {
                    b.Navigation("ShopRentalProcessConfigarations");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Floor", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Property", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("OpeningBalances");

                    b.Navigation("ShopRentalVoteAssigns");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.PropertyNature", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.PropertyType", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.RentalPaymentDateType", b =>
                {
                    b.Navigation("ShopRentalProcessConfigarations");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.RentalPlace", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.Shop", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("OpeningBalance");

                    b.Navigation("ProcessConfigurationSettingAssign");

                    b.Navigation("ShopAgreementChangeRequest");

                    b.Navigation("VoteAssign");
                });

            modelBuilder.Entity("CAT20.Core.Models.ShopRental.ShopRentalProcessConfigaration", b =>
                {
                    b.Navigation("ProcessConfigurationSettingAssigns");
                });
#pragma warning restore 612, 618
        }
    }
}

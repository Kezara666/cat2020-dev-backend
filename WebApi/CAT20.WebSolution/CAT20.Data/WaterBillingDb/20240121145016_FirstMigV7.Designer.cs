// <auto-generated />
using System;
using CAT20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAT20.Data.WaterBillingDb
{
    [DbContext(typeof(WaterBillingDbContext))]
    [Migration("20240121145016_FirstMigV7")]
    partial class FirstMigV7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_sinhala_ci")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.ApplicationForConnection", b =>
                {
                    b.Property<string>("ApplicationNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("wb_afc_application_no");

                    b.Property<int?>("ApplicationType")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_conn_type");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("wb_afc_approved_at");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_approved_by");

                    b.Property<int>("BillingId")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_billing_id");

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("wb_afc_rejt_cmt");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_afc_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_created_by");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_afc_is_approved");

                    b.Property<bool?>("IsAssigned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("wb_afc_is_assigned");

                    b.Property<int?>("PartnerId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_partner_id");

                    b.Property<string>("RequestedConnectionId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("wb_afc_req_connection_id");

                    b.Property<int>("RequestedNatureId")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_req_nature_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_status");

                    b.Property<int?>("SubRoadId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_subroad_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_afc_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_updated_by");

                    b.HasKey("ApplicationNo");

                    b.HasIndex("RequestedNatureId");

                    b.HasIndex("SubRoadId");

                    b.ToTable("wb_application_for_connections", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.ApplicationForConnectionDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_doc_id");

                    b.Property<string>("ApplicationNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("wb_afc_doc_application_no");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_afc_doc_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_doc_created_by");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_afc_doc_type");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_doc_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_afc_doc_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_afc_doc_updated_by");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_doc_uri");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationNo");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("wb_application_for_connections_documents", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.ConnectionAuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_atl_id");

                    b.Property<int>("Action")
                        .HasColumnType("int")
                        .HasColumnName("wb_atl_action");

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_action_by");

                    b.Property<int>("EntityType")
                        .HasColumnType("int")
                        .HasColumnName("wb_entity_type");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_atl_time_stamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("WaterConnectionId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_atl_wc_id");

                    b.HasKey("Id");

                    b.HasIndex("WaterConnectionId");

                    b.ToTable("wb_connection_audit_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.MeterConnectInfo", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("wb_wp_mci_conn_id");

                    b.Property<string>("ConnectionNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wb_mci_conn_no");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_mci_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mci_created_by");

                    b.Property<bool?>("IsAssigned")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_mci_is_assign");

                    b.Property<string>("MeterNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wb_mci_meter_no");

                    b.Property<int?>("OrderNo")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_mci_order_no");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mci_status");

                    b.Property<int?>("SubRoadId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_mci_subroad_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_mci_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mci_updated_by");

                    b.HasKey("ConnectionId");

                    b.HasIndex("ConnectionId")
                        .IsUnique();

                    b.HasIndex("SubRoadId");

                    b.ToTable("wb_meter_connection_info", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.MeterReaderAssign", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mras_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_mras_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mras_created_by");

                    b.Property<int?>("MeterReaderId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_mras_reader_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mras_status");

                    b.Property<int?>("SubRoadId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_mras_subroad_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_mras_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mras_updated_by");

                    b.HasKey("Id");

                    b.ToTable("wb_meter_reader_assigns", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.NonMeterFixCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_nmfc_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_nmfc_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_nmfc_created_by");

                    b.Property<decimal?>("FixedCharge")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_nmfc_fixed_charge");

                    b.Property<int?>("NatureId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_nmfc_nature_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_nmfc_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_nmfc_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_nmfc_updated_by");

                    b.Property<int?>("WaterProjectId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_nmfc_wp_id");

                    b.HasKey("Id");

                    b.HasIndex("NatureId", "WaterProjectId")
                        .IsUnique();

                    b.ToTable("wb_non_meter_fix_charges", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.NumberSequence", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationNumber")
                        .HasColumnType("int")
                        .HasColumnName("wb_application_no");

                    b.Property<int?>("CoreNumber")
                        .HasColumnType("int")
                        .HasColumnName("wb_core_no");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_ns_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_ns_created_by");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("wb_office_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_ns_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_ns_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_ns_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId")
                        .IsUnique();

                    b.ToTable("wb_number_sequence", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.OBLIApprovalStatus", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_obli_aprl_sts_id");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("wb_obli_aprl_sts_comment");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_info_created_by");

                    b.Property<int?>("OpenBalStatus")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_obli_aprl_status");

                    b.Property<int?>("OpnBalInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_opn_bal_info_updated_at");

                    b.HasKey("Id");

                    b.HasIndex("OpnBalInfoId");

                    b.ToTable("wb_open_balance_approval_status", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.OpeningBalanceInformation", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_info_id");

                    b.Property<int?>("BalanceIdForCurrentBalance")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_bal_id_for_current_year_bal");

                    b.Property<int?>("BalanceIdForLastYearArrears")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_bal_id_for_last_year_arrears");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_opn_bal_info_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_info_created_by");

                    b.Property<bool?>("IsProcessed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_opn_bal_is_processed");

                    b.Property<int?>("LastMeterReading")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_info_lm_reading");

                    b.Property<decimal?>("LastYearArrears")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_opn_bal_info_ly_arrears");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_month");

                    b.Property<decimal?>("MonthlyBalance")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_opn_bal_monthly");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_info_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_opn_bal_info_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_info_updated_by");

                    b.Property<int>("WaterConnectionId")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_info_wcon_id");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("wb_opn_bal_year");

                    b.HasKey("Id");

                    b.HasIndex("WaterConnectionId")
                        .IsUnique();

                    b.ToTable("wb_open_balance_info", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.PaymentCategory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_pay_cat_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_pay_cat_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_pay_cat_created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("wb_pay_cat_desc");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_pay_cat_sabhaId");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_pay_cat_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_pay_cat_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_pay_cat_updated_by");

                    b.HasKey("Id");

                    b.ToTable("wb_payment_category", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.VoteAssign", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_vas_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_vas_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_vas_created_by");

                    b.Property<int?>("PaymentCategoryId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_vas_payment_category_Id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_vas_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_vas_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_vas_updated_by");

                    b.Property<int?>("WaterProjectId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_vas_water_project_id");

                    b.Property<int?>("vote")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_vas_vote");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCategoryId");

                    b.HasIndex("WaterProjectId", "PaymentCategoryId")
                        .IsUnique();

                    b.ToTable("wb_vote_assigns", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterBillDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_doc_id");

                    b.Property<int?>("ConnectionId")
                        .HasColumnType("int")
                        .HasColumnName("wb_doc_connection_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_doc_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_doc_created_by");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_doc_type");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_doc_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_doc_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_doc_updated_by");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_doc_uri");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId");

                    b.ToTable("wb_wb_documents", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnection", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_id");

                    b.Property<int>("ActiveNatureId")
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_active_nature_id");

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_active_sataus");

                    b.Property<int?>("BillingId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_billing_id");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("wb_wc_connection_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wc_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_created_by");

                    b.Property<DateOnly?>("InstallDate")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("wb_wc_install_date");

                    b.Property<bool?>("NatureChangeRequest")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_wc_nature_change_request");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_office_id");

                    b.Property<int?>("PartnerId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_partner_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_status");

                    b.Property<bool?>("StatusChangeRequest")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_wc_status_change_request");

                    b.Property<int?>("SubRoadId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_subroad_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wc_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("ActiveNatureId");

                    b.HasIndex("ConnectionId")
                        .IsUnique();

                    b.HasIndex("OfficeId");

                    b.HasIndex("SubRoadId");

                    b.ToTable("wb_water_connections", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnectionBalance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_id");

                    b.Property<decimal?>("AdditionalCharges")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_additional_charge");

                    b.Property<int?>("AdditionalType")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_additional_type");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_bal_bar_code");

                    b.Property<DateOnly>("BillProcessDate")
                        .HasColumnType("date")
                        .HasColumnName("wb_bal_bill_process_date");

                    b.Property<string>("CalculationString")
                        .HasColumnType("longtext")
                        .HasColumnName("wb_bal_cal_string");

                    b.Property<string>("ConnectionNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wb_bal_mci_conn_no");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_bal_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_created_by");

                    b.Property<decimal?>("FixedCharge")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_fix_charge");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("wb_bal_from_date");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_bal_invoice_no");

                    b.Property<bool?>("IsCompleted")
                        .IsRequired()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_bal_is_completed");

                    b.Property<bool?>("IsFilled")
                        .IsRequired()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_bal_is_filled");

                    b.Property<bool?>("IsProcessed")
                        .IsRequired()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("wb_bal_is_processed");

                    b.Property<decimal?>("LastBalance")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_print_arrears");

                    b.Property<string>("LastBillYearMonth")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_bal_print_last_bill_year_month");

                    b.Property<decimal?>("LatePaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_late_paid");

                    b.Property<int?>("MeterCondition")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_meter-condition");

                    b.Property<string>("MeterNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_bal_meter_no");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_month");

                    b.Property<int?>("NoOfConcels")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("wb_bal_no_of_cancels");

                    b.Property<int?>("NoOfPayments")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("wb_bal_no_of_payments");

                    b.Property<int?>("NumPrints")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_num_print");

                    b.Property<decimal?>("OnTimePaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_ontime_paid");

                    b.Property<decimal?>("Payments")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_payments");

                    b.Property<int?>("PreviousMeterReading")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_prev_meter_reading");

                    b.Property<decimal?>("PrintBalanceBF")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_print_balance_b_f");

                    b.Property<string>("PrintBillingDetails")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wb_bal_print_billing_details");

                    b.Property<decimal?>("PrintLastMonthPayments")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_print_last_month_payments");

                    b.Property<DateOnly?>("ReadingDate")
                        .HasColumnType("date")
                        .HasColumnName("wb_bal_reading_date");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal?>("ThisMonthCharges")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_this_month_charges");

                    b.Property<int?>("ThisMonthMeterReading")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_this_month_meter_reading");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("wb_bal_to_date");

                    b.Property<decimal?>("TotalDue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_total_due");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_bal_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_updated_by");

                    b.Property<decimal?>("VATAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_vat_amount");

                    b.Property<decimal?>("VATRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_vat_rate");

                    b.Property<decimal?>("WaterCharge")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_bal_water_charge");

                    b.Property<int?>("WcPrimaryId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_wc_primary_id");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("wb_bal_year");

                    b.HasKey("Id");

                    b.HasIndex("WcPrimaryId", "Year", "Month")
                        .IsUnique();

                    b.ToTable("wb_balances", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnectionNatureLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_nlog_id");

                    b.Property<int?>("Action")
                        .HasColumnType("int")
                        .HasColumnName("wb_nlog_action");

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_nlog_action_by");

                    b.Property<string>("ActionNote")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("wb_slog_action_note");

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("wb_nlog_activated_date");

                    b.Property<string>("Comment")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("wb_wc_nlog_comment");

                    b.Property<int?>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_con_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_nlog_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_nlog_created_by");

                    b.Property<int>("NatureId")
                        .HasColumnType("int")
                        .HasColumnName("wb_nlog_nature_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_nlog_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_nlog_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_nlog_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId");

                    b.HasIndex("NatureId");

                    b.ToTable("wb_wc_nature_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnectionStatusLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_slog_id");

                    b.Property<int?>("Action")
                        .HasColumnType("int")
                        .HasColumnName("wb_slog_action");

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_slog_action_by");

                    b.Property<string>("ActionNote")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("wb_slog_action_note");

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("wb_slog_activated_date");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("wb_wc_slog_comment");

                    b.Property<int?>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_con_id");

                    b.Property<int>("ConnectionStatus")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("wb_wc_slog_conn_satus");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_slog_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_slog_created_by");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_slog_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_slog_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_slog_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId");

                    b.ToTable("wb_wc_connection_status_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wb_wp_name");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_office_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId", "Name")
                        .IsUnique();

                    b.ToTable("wb_water_projects", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectGnDivision", b =>
                {
                    b.Property<int?>("WaterProjectId")
                        .HasColumnType("int")
                        .HasColumnName("wb_waterprojet_id");

                    b.Property<int?>("ExternalGnDivisionId")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_ex_gnd_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_gnd_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_gnd_created_by");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_gnd_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_gnd_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_gnd_updated_by");

                    b.HasKey("WaterProjectId", "ExternalGnDivisionId");

                    b.ToTable("wb_waterproject_gndivisions", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectMainRoad", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mr_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_mr_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mr_created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wb_wp_mr_name");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mr_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mr_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_mr_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_mr_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Name", "SabhaId")
                        .IsUnique();

                    b.ToTable("wb_wp_mainroads", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectNature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_nature_id");

                    b.Property<int?>("CType")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_nature_c_type");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_nature_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_nature_created_by");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_nature_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_nature_status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("wb_wp_nature_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_nature_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_nature_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Type", "SabhaId")
                        .IsUnique();

                    b.ToTable("wb_wp_natures", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectSubRoad", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_sr_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_sr_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_sr_created_by");

                    b.Property<int>("MainRoadId")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_sr_main_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wb_wp_sr_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_sr_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wp_sr_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_sr_updated_by");

                    b.Property<int>("WaterProjectId")
                        .HasColumnType("int")
                        .HasColumnName("wb_wp_sr_water_project_id");

                    b.HasKey("Id");

                    b.HasIndex("MainRoadId");

                    b.HasIndex("WaterProjectId");

                    b.HasIndex("Name", "MainRoadId")
                        .IsUnique();

                    b.ToTable("wb_wp_subroads", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wt_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_created_by");

                    b.Property<decimal?>("FixedCharge")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_wt_fixed_charge");

                    b.Property<int?>("NatureId")
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_nature_id");

                    b.Property<int?>("RangeEnd")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_range_end");

                    b.Property<int?>("RangeStart")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_range_start");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_status");

                    b.Property<decimal?>("UnitPrice")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wb_wt_unit_price");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("wb_wt_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_updated_by");

                    b.Property<int?>("WaterProjectId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("wb_wt_wp_id");

                    b.HasKey("Id");

                    b.HasIndex("NatureId");

                    b.ToTable("wb_water_tariffs", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("WaterProjectWaterProjectNature", b =>
                {
                    b.Property<int>("NaturesId")
                        .HasColumnType("int");

                    b.Property<int>("WaterProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.HasKey("NaturesId", "WaterProjectsId");

                    b.HasIndex("WaterProjectsId");

                    b.ToTable("water_projects_natures_assign", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.ApplicationForConnection", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectNature", "Nature")
                        .WithMany("ApplicationForConnections")
                        .HasForeignKey("RequestedNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wb_afc_req_nature_id");

                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectSubRoad", "SubRoad")
                        .WithMany("ApplicationForConnections")
                        .HasForeignKey("SubRoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_afc_subroad_id");

                    b.Navigation("Nature");

                    b.Navigation("SubRoad");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.ApplicationForConnectionDocument", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.ApplicationForConnection", "ApplicationForConnection")
                        .WithMany("SubmittedDocuments")
                        .HasForeignKey("ApplicationNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_doc_afwc_id");

                    b.Navigation("ApplicationForConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.ConnectionAuditLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterConnection", "WaterConnection")
                        .WithMany("ConnectionAuditLogs")
                        .HasForeignKey("WaterConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_atl_wc_id");

                    b.Navigation("WaterConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.MeterConnectInfo", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectSubRoad", "WaterProjectSubRoad")
                        .WithMany("MeterConnectInfos")
                        .HasForeignKey("SubRoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_meter_connectInfo_wp_subRoad");

                    b.Navigation("WaterProjectSubRoad");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.NonMeterFixCharge", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectNature", "WaterProjectNature")
                        .WithMany("NonMeterFixCharges")
                        .HasForeignKey("NatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_nmfc_wp_nature");

                    b.Navigation("WaterProjectNature");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.OBLIApprovalStatus", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.OpeningBalanceInformation", "OpeningBalanceInformation")
                        .WithMany("OBLIApprovalStatus")
                        .HasForeignKey("OpnBalInfoId")
                        .HasConstraintName("fk_opn_bal_info_aprl_sts_id");

                    b.Navigation("OpeningBalanceInformation");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.OpeningBalanceInformation", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterConnection", "WaterConnection")
                        .WithOne("OpeningBalanceInformation")
                        .HasForeignKey("CAT20.Core.Models.WaterBilling.OpeningBalanceInformation", "WaterConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WaterConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.VoteAssign", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.PaymentCategory", "PaymentCategory")
                        .WithMany("VoteAssigns")
                        .HasForeignKey("PaymentCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_vt_pcat");

                    b.Navigation("PaymentCategory");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterBillDocument", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterConnection", "WaterConnection")
                        .WithMany("Documents")
                        .HasForeignKey("ConnectionId")
                        .HasConstraintName("fk_wp_doc_conn_id");

                    b.Navigation("WaterConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnection", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectNature", "ActiveNature")
                        .WithMany("WaterConnections")
                        .HasForeignKey("ActiveNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wb_wc_active_nature_id");

                    b.HasOne("CAT20.Core.Models.WaterBilling.MeterConnectInfo", "MeterConnectInfo")
                        .WithOne("WaterConnection")
                        .HasForeignKey("CAT20.Core.Models.WaterBilling.WaterConnection", "ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectSubRoad", "SubRoad")
                        .WithMany("WaterConnections")
                        .HasForeignKey("SubRoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_wc_subroad_id");

                    b.Navigation("ActiveNature");

                    b.Navigation("MeterConnectInfo");

                    b.Navigation("SubRoad");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnectionBalance", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterConnection", "WaterConnection")
                        .WithMany("Balances")
                        .HasForeignKey("WcPrimaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bal_wc_id");

                    b.Navigation("WaterConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnectionNatureLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterConnection", "WaterConnection")
                        .WithMany("NatureInfos")
                        .HasForeignKey("ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_wc_nlog_id");

                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectNature", "Nature")
                        .WithMany()
                        .HasForeignKey("NatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nature");

                    b.Navigation("WaterConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnectionStatusLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterConnection", "WaterConnection")
                        .WithMany("StatusInfos")
                        .HasForeignKey("ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_wc_slog_id");

                    b.Navigation("WaterConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectGnDivision", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProject", "WaterProject")
                        .WithMany("WaterProjectGnDivisions")
                        .HasForeignKey("WaterProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_gnd_wp_project_id");

                    b.Navigation("WaterProject");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectSubRoad", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectMainRoad", "MainRoad")
                        .WithMany("SubRoads")
                        .HasForeignKey("MainRoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_subroad_wp_mainRoad");

                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProject", "WaterProject")
                        .WithMany("SubRoads")
                        .HasForeignKey("WaterProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_subroad_wp_project_id");

                    b.Navigation("MainRoad");

                    b.Navigation("WaterProject");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterTariff", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectNature", "WaterProjectNature")
                        .WithMany("WaterTariffs")
                        .HasForeignKey("NatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wp_tariff_wp_nature");

                    b.Navigation("WaterProjectNature");
                });

            modelBuilder.Entity("WaterProjectWaterProjectNature", b =>
                {
                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProjectNature", null)
                        .WithMany()
                        .HasForeignKey("NaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAT20.Core.Models.WaterBilling.WaterProject", null)
                        .WithMany()
                        .HasForeignKey("WaterProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.ApplicationForConnection", b =>
                {
                    b.Navigation("SubmittedDocuments");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.MeterConnectInfo", b =>
                {
                    b.Navigation("WaterConnection");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.OpeningBalanceInformation", b =>
                {
                    b.Navigation("OBLIApprovalStatus");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.PaymentCategory", b =>
                {
                    b.Navigation("VoteAssigns");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterConnection", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("ConnectionAuditLogs");

                    b.Navigation("Documents");

                    b.Navigation("NatureInfos");

                    b.Navigation("OpeningBalanceInformation");

                    b.Navigation("StatusInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProject", b =>
                {
                    b.Navigation("SubRoads");

                    b.Navigation("WaterProjectGnDivisions");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectMainRoad", b =>
                {
                    b.Navigation("SubRoads");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectNature", b =>
                {
                    b.Navigation("ApplicationForConnections");

                    b.Navigation("NonMeterFixCharges");

                    b.Navigation("WaterConnections");

                    b.Navigation("WaterTariffs");
                });

            modelBuilder.Entity("CAT20.Core.Models.WaterBilling.WaterProjectSubRoad", b =>
                {
                    b.Navigation("ApplicationForConnections");

                    b.Navigation("MeterConnectInfos");

                    b.Navigation("WaterConnections");
                });
#pragma warning restore 612, 618
        }
    }
}

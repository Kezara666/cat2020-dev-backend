// <auto-generated />
using System;
using CAT20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAT20.Data.VoteAccDb
{
    [DbContext(typeof(VoteAccDbContext))]
    [Migration("20241025085844_FirstMigV17")]
    partial class FirstMigV17
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_sinhala_ci")
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("CAT20.Core.DTO.Vote.SpecialLedgerAccountTypesResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameInEnglish")
                        .HasColumnType("longtext");

                    b.Property<string>("NameInSinhala")
                        .HasColumnType("longtext");

                    b.Property<string>("NameInTamil")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SpecialLedgerAccountTypesResource");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.AccountTransfer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionState")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("FromAccountId")
                        .HasColumnType("int")
                        .HasColumnName("from_account_Id");

                    b.Property<int>("FromVoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("from_vote_balanceId");

                    b.Property<int>("FromVoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("from_vote_detail_id");

                    b.Property<bool?>("IsFullyRefunded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_fully_refunded");

                    b.Property<bool>("IsRefund")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_refund");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<decimal>("RefundedAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("refunded_amount");

                    b.Property<string>("RequestNote")
                        .HasColumnType("longtext")
                        .HasColumnName("request_note");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int>("ToAccountId")
                        .HasColumnType("int")
                        .HasColumnName("to_account_id");

                    b.Property<int>("ToVoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("to_vote_balanceId");

                    b.Property<int>("ToVoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("to_vote_detail_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_Id");

                    b.HasKey("Id");

                    b.ToTable("account_transfer", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.AccountTransferRefunding", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccountTransferId")
                        .HasColumnType("int")
                        .HasColumnName("account_transfer_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("CrossOrderId")
                        .HasColumnType("int");

                    b.Property<string>("RefundNote")
                        .HasColumnType("longtext")
                        .HasColumnName("refund_note");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("dep_status");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountTransferId");

                    b.ToTable("account_transfer_refunding", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CashBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_bank_acc_id");

                    b.Property<decimal>("CashAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cb_cash_amount");

                    b.Property<decimal>("ChequeAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cb_cheque_amount");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cb_cheque_no");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cb_code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("CrossAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cb_cross_amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("vt_cb_date");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cb_description");

                    b.Property<decimal>("DirectAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cb_direct_amount");

                    b.Property<int>("ExpenseCategory")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_expense_category");

                    b.Property<string>("ExpenseHeadsAsString")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cb_expense_head_string");

                    b.Property<int?>("ExpenseItemId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_expense_item_id");

                    b.Property<int>("IncomeCategory")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_income_category");

                    b.Property<int>("IncomeExpenseMethod")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_income_expense_method");

                    b.Property<string>("IncomeHeadsAsString")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cb_income_head_string");

                    b.Property<int?>("IncomeItemId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_income_item_id");

                    b.Property<int>("OfiiceId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb__office_id");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningTotal")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cb_rn_total");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_sbha_id");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_session_id");

                    b.Property<string>("SubCode")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cb_sub_code");

                    b.Property<DateTime>("SystemAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_at");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("vt_cb_tr_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("vt_cash_book", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CashBookDailyBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int")
                        .HasColumnName("bank_acc_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<decimal>("ExpenseTotalAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("current_balance");

                    b.Property<decimal>("ExpenseTotalCashAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("exp_cash_amount");

                    b.Property<decimal>("ExpenseTotalChequeAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("exp_cheque_amount");

                    b.Property<decimal>("ExpenseTotalCrossAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("exp_cross_amount");

                    b.Property<decimal>("ExpenseTotalDirectAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("exp_direct_amount");

                    b.Property<decimal>("IncomeTotalAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("inc_total_amount");

                    b.Property<decimal>("IncomeTotalCashAmount")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("inc_cheque_amount");

                    b.Property<decimal>("IncomeTotalChequeAmount")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("inc_cheque_amount");

                    b.Property<decimal>("IncomeTotalCrossAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("inc_cross_amount");

                    b.Property<decimal>("IncomeTotalDirectAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("inc_direct_amount");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("vt_cash_book_daily_balance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.Commitment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<int?>("BankId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("bank_id");

                    b.Property<string>("CommitmentSequenceNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("commitment_sequence_number");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("HasVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("has_voucher");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<int>("PayeeCategory")
                        .HasColumnType("int")
                        .HasColumnName("payee_category");

                    b.Property<int?>("PayeeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payee_name");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("payment_status");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int?>("SessionId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_pmnt_commitment", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CommitmentActionsLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<int?>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<int?>("CommitmentId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_id");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.HasKey("Id");

                    b.HasIndex("CommitmentId");

                    b.ToTable("vt_lgr_pmnt_commitment_action_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CommitmentLine", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<int>("CommitmentId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_id");

                    b.Property<int>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.HasKey("Id");

                    b.HasIndex("CommitmentId");

                    b.ToTable("vt_lgr_pmnt_commitment_line", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CommitmentLineVotes", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<int>("CommitmentLineId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_line_id");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("payment_status");

                    b.Property<decimal>("RemainingAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("remaining");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<int?>("VoteAllocationId")
                        .HasColumnType("int")
                        .HasColumnName("vote_allacation_id");

                    b.Property<string>("VoteCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vote_code");

                    b.Property<int>("VoteId")
                        .HasColumnType("int")
                        .HasColumnName("vote_id");

                    b.HasKey("Id");

                    b.HasIndex("CommitmentLineId");

                    b.ToTable("vt_lgr_pmnt_commitmentline_votes", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CreditorBilling", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int>("CreditorCategory")
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_creditor_cetegory");

                    b.Property<int?>("CreditorId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_creditor_id");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_custom_vote_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cr_bl_description");

                    b.Property<int?>("LedgerAccountId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_ledger_account_id");

                    b.Property<int?>("Month")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_month");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_office_id");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("cr_bl_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("cr_bl_year");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_creditor_billing", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CutProvision", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<string>("ActionNote")
                        .HasColumnType("longtext")
                        .HasColumnName("action_system_date");

                    b.Property<decimal?>("ActionSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_allocation");

                    b.Property<decimal?>("ActionSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_balance");

                    b.Property<int>("ActionState")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("CPNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cut_province_no");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("RequestBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("requet_by");

                    b.Property<DateTime?>("RequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_date");

                    b.Property<string>("RequestNote")
                        .HasColumnType("longtext")
                        .HasColumnName("requet_note");

                    b.Property<decimal?>("RequestSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_allocation");

                    b.Property<decimal?>("RequestSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_balance");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<int>("SabahId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("SystemActionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SystemRequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_system_date");

                    b.Property<int>("VoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_balance_id");

                    b.Property<int>("VoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("vote_detail_id");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_vote_cut_province", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.Deposit", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dep_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dep_deposit_date");

                    b.Property<int>("DepositSubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("dep_deposit_sub_category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dep_description");

                    b.Property<decimal>("HoldAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hold_amount");

                    b.Property<decimal>("InitialDepositAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("dep_initial_deposit_amount");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_completed");

                    b.Property<bool>("IsEditable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_editable");

                    b.Property<int>("LedgerAccountId")
                        .HasColumnType("int")
                        .HasColumnName("dep_ledger_account_id");

                    b.Property<int?>("MixOrderId")
                        .HasColumnType("int")
                        .HasColumnName("dep_mix_order_id");

                    b.Property<int?>("MixOrderLineId")
                        .HasColumnType("int")
                        .HasColumnName("dep_mix_order_line_id");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("dep_office_id");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("dep_partner_id");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dep_receipt_no");

                    b.Property<decimal>("ReleasedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("dep_relesed_amount");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("dep_sabha_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("dep_status");

                    b.Property<int?>("SubInfoId")
                        .HasColumnType("int")
                        .HasColumnName("dep_sub_info");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("deposits", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.DepositForVoucher", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("amount");

                    b.Property<int?>("DepositId")
                        .HasColumnType("int")
                        .HasColumnName("deposit_id");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("VoucherId");

                    b.ToTable("vt_lgr_pmnt_deposit_for_voucher", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.DepositSubInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_craete_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Name", "SabhaId")
                        .IsUnique();

                    b.ToTable("deposit_sub_info", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.DepreciationRates", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubTitleCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DepreciationRates");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.EmployeeLoansForVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallmentAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("installment_amount");

                    b.Property<decimal?>("InterestAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("interest_amount");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("VoucherId");

                    b.ToTable("vt_lgr_pmnt_emp_loan_for_voucher", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FinalAccountSequenceNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("LastIndex")
                        .HasColumnType("int")
                        .HasColumnName("last_index");

                    b.Property<int>("ModuleType")
                        .HasColumnType("int")
                        .HasColumnName("module_type");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("prefix");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("Year", "SabhaId", "ModuleType")
                        .IsUnique();

                    b.ToTable("final_account_sequence_numbers", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FixedAssets", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fxa_id");

                    b.Property<decimal>("AccumulatedDepreciation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fxa_accumulated_depreciation");

                    b.Property<decimal>("AccumulatedRevenueRecognition")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fxa_accumulated_revenue_recognition");

                    b.Property<DateTime?>("AcquiredDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fxa_acquired_date");

                    b.Property<int?>("AssetsLedgerAccountId")
                        .HasColumnType("int")
                        .HasColumnName("fxa_ledger_account_id");

                    b.Property<string>("AssetsRegNo")
                        .HasColumnType("longtext")
                        .HasColumnName("fxa_assets_reg_no");

                    b.Property<string>("AssetsTitle")
                        .HasColumnType("longtext")
                        .HasColumnName("fxa_assets_title");

                    b.Property<int>("BalanceType")
                        .HasColumnType("int")
                        .HasColumnName("fxa_balance_type");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fxa_custom_vote_id");

                    b.Property<decimal>("GrantAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fxa_grant_amount");

                    b.Property<int?>("GrantCustomVoteId")
                        .HasColumnType("int")
                        .HasColumnName("fxa_grant_custom_vote_id");

                    b.Property<int?>("GrantLedgerAccountId")
                        .HasColumnType("int")
                        .HasColumnName("fxa_grant_ledger_account_id");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fxa_office_id");

                    b.Property<decimal>("OriginalORRevaluedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fxa_original_or_revalued_amount");

                    b.Property<int?>("RemainingLifetime")
                        .HasColumnType("int")
                        .HasColumnName("fxa_remaining_life_time");

                    b.Property<DateTime?>("RevalueDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fxa_revalue_date");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fxa_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("fxa_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_fixed_assets", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FixedDeposit", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fd_id");

                    b.Property<int?>("BankBranchId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fd_bank_branch_id");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fd_custom_vote_id");

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fd_deposit_date");

                    b.Property<int?>("DepositTypeVote")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fd_type_vote_id");

                    b.Property<int?>("Duration")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fd_duration");

                    b.Property<decimal?>("FDAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fd_fd_amount");

                    b.Property<decimal?>("InterestRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fd_interest_rate");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fd_office_id");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fd_reference");

                    b.Property<DateTime>("RenewableDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fd_renewable_date");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("fd_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("fd_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_fixed_deposits", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FR66FromItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("ActionSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_allocation");

                    b.Property<decimal?>("ActionSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_balance");

                    b.Property<int>("FR66Id")
                        .HasColumnType("int")
                        .HasColumnName("vote_fr66_id");

                    b.Property<decimal>("FromAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("from_amount");

                    b.Property<int>("FromVoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_fr66_from_vote_balance_id");

                    b.Property<int>("FromVoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("from_vote_detail_id");

                    b.Property<decimal?>("RequestSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_allocation");

                    b.Property<decimal?>("RequestSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_balance");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.HasKey("Id");

                    b.HasIndex("FR66Id");

                    b.ToTable("vt_lgr_vote_fr66_items_from", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FR66ToItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("ActionSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_allocation");

                    b.Property<decimal?>("ActionSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_balance");

                    b.Property<int>("FR66Id")
                        .HasColumnType("int")
                        .HasColumnName("vote_fr66_id");

                    b.Property<decimal?>("RequestSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_allocation");

                    b.Property<decimal?>("RequestSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_balance");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<decimal>("ToAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("to_amount");

                    b.Property<int>("ToVoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_fr66_to_vote_balance_id");

                    b.Property<int>("ToVoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("to_vote_detail_id");

                    b.HasKey("Id");

                    b.HasIndex("FR66Id");

                    b.ToTable("vt_lgr_vote_fr66_items_to", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FR66Transfer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<string>("ActionNote")
                        .HasColumnType("longtext")
                        .HasColumnName("action_system_date");

                    b.Property<int>("ActionState")
                        .HasColumnType("int");

                    b.Property<string>("FR66No")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("journal_no");

                    b.Property<decimal>("FromAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("from_amount");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("RequestBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("requet_by");

                    b.Property<DateTime?>("RequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_date");

                    b.Property<string>("RequestNote")
                        .HasColumnType("longtext")
                        .HasColumnName("requet_note");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<int>("SabahId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("SystemActionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SystemRequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_system_date");

                    b.Property<decimal>("ToAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("to_amount");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_vote_fr66_transfer", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.IndustrialCreditors", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idc_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("idc_amount");

                    b.Property<int?>("CategoryVote")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_category_vote");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int>("CreditorCategory")
                        .HasColumnType("int")
                        .HasColumnName("idc_creditor_category");

                    b.Property<int?>("CreditorId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_creditor_id");

                    b.Property<int?>("CreditorTypeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_creditor_type_id");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_creditor_custom_vote_id");

                    b.Property<int?>("FundSourceId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_fund_source_id");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_office_id");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("idc_project_name");

                    b.Property<int?>("SabhaFundSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("idc_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.HasIndex("CreditorTypeId");

                    b.HasIndex("SabhaFundSourceId");

                    b.ToTable("vt_obl_industrial_creditors", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.IndustrialCreditorsDebtorsTypes", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_industrial_creditors_debtors_types", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.IndustrialDebtors", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idb_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("idb_amount");

                    b.Property<int?>("CategoryVote")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idb_category_vote");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idb_custom_vote_id");

                    b.Property<int>("DebtorCategory")
                        .HasColumnType("int")
                        .HasColumnName("idb_debtor_category");

                    b.Property<int?>("DebtorId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idb_debtor_id");

                    b.Property<int?>("DebtorTypeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idb_debtor_type_id");

                    b.Property<int?>("FundSourceId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idb_fund_source_id");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_office_id");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("idb_project_name");

                    b.Property<int?>("SabhaFundSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("idc_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("idc_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.HasIndex("DebtorTypeId");

                    b.HasIndex("SabhaFundSourceId");

                    b.ToTable("vt_obl_industrial_debtors", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.InternalJournalTransfers", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ijt_id");

                    b.Property<int?>("AppCategory")
                        .HasColumnType("int")
                        .HasColumnName("ijt_app_category");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("ijt_code");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<decimal>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("ijt_credit");

                    b.Property<decimal>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("ijt_debit");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("ijt_description");

                    b.Property<int?>("ModulePrimaryKey")
                        .HasColumnType("int")
                        .HasColumnName("ijt_module_primary_key");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("ijt_month");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("ijt_sabha_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("ijt_status");

                    b.Property<string>("SubCode")
                        .HasColumnType("longtext")
                        .HasColumnName("ijt_sub_code");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("ijt_transaction_type");

                    b.Property<int?>("VoteBalanceId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ijt_vote_bal_id");

                    b.Property<int?>("VoteDetailId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ijt_vote_id");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("ijt_year");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_internal_journal_transfer", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.LALoan", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lal_id");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("lal_balance");

                    b.Property<int?>("BankBranchId")
                        .HasColumnType("int")
                        .HasColumnName("lal_bank_branch_id");

                    b.Property<DateTime>("BorrowingDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("lal_borrowing_date");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("lal_loan_type_custom_vote");

                    b.Property<int?>("Duration")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("lal_duration");

                    b.Property<decimal>("Installment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("lal_installment");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("lal_interest_rate");

                    b.Property<decimal>("LoanAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("lal_loan_amount");

                    b.Property<string>("LoanPurpose")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("lal_loan_purpose");

                    b.Property<int?>("LoanTypeVote")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("lal_loan_type_vote");

                    b.Property<string>("Mortgage")
                        .HasColumnType("longtext")
                        .HasColumnName("lal_mortgage");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("lal_office_id");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("lal_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("lal_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_la_loan", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLineLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<int?>("CommitmentLineId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_line_id");

                    b.Property<int>("CommitmentLogId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_log_id");

                    b.HasKey("Id");

                    b.HasIndex("CommitmentLogId");

                    b.ToTable("vt_lgr_pmnt_commitment_line_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLineVotesLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("CommitmentLineLogId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_line_log_id");

                    b.Property<int?>("CommitmentLineVoteId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_line_vote_id");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("payment_status");

                    b.Property<decimal>("RemainingAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("remaining");

                    b.Property<int?>("VoteAllocationId")
                        .HasColumnType("int")
                        .HasColumnName("vote_allacation_id");

                    b.Property<string>("VoteCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vote_code");

                    b.Property<int>("VoteId")
                        .HasColumnType("int")
                        .HasColumnName("vote_id");

                    b.HasKey("Id");

                    b.HasIndex("CommitmentLineLogId");

                    b.ToTable("vt_lgr_pmnt_commitmentline_votes_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int?>("CommitmentId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_id");

                    b.Property<string>("CommitmentSequenceNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("commitment_sequence_number");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("HasVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("has_voucher");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<int>("PayeeCategory")
                        .HasColumnType("int");

                    b.Property<int>("PayeeId")
                        .HasColumnType("int")
                        .HasColumnName("payee_id");

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payee_name");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.Property<int>("sabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.HasKey("Id");

                    b.HasIndex("CommitmentId");

                    b.ToTable("vt_lgr_pmnt_commitment_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.VoucherChequeLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ChequeNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cheque_no");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsPrinted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_printed");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<DateTime?>("SystemCreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VoucherChequeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("voucher_cheque_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherChequeId");

                    b.ToTable("vt_lgr_pmnt_voucher_cheque_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.VoucherLineLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CommentOrDescription")
                        .HasColumnType("longtext")
                        .HasColumnName("comment_or_description");

                    b.Property<int>("CommitmentLineId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_line_id");

                    b.Property<decimal>("NBT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("nbt");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<decimal?>("RptBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rpt_balance");

                    b.Property<decimal?>("RptBudgetAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rpt_budget_allocation");

                    b.Property<decimal?>("RptExpenditure")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rpt_expenditure");

                    b.Property<decimal>("SurchargeAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("surcharge_amount");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<decimal>("VAT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vat");

                    b.Property<int>("VoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_balance_id");

                    b.Property<string>("VoteCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vote_code");

                    b.Property<int>("VoteId")
                        .HasColumnType("int")
                        .HasColumnName("vote_id");

                    b.Property<int?>("VoucherLineId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_line_id");

                    b.Property<int>("VoucherLogId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_log_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherLogId");

                    b.ToTable("vt_lgr_pmnt_voucher_line_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.VoucherLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("CommitmentId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("NBTTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("nbt_total");

                    b.Property<int>("PayeeId")
                        .HasColumnType("int")
                        .HasColumnName("payee_id");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    b.Property<decimal?>("Stamp")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("stamp");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<decimal>("VATTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vat_total");

                    b.Property<int?>("VoucherCategory")
                        .HasColumnType("int")
                        .HasColumnName("voucher_category");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.Property<string>("VoucherSequenceNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("voucher_sequence_number");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("vt_lgr_pmnt_voucher_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.PrepaidPayment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prepay_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prepay_amount");

                    b.Property<int?>("CategoryVote")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("prepay_category_vote");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("prepay_category_custom_vote_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("prepay_description");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("prepay_office_id");

                    b.Property<int?>("PrePaidPaidToId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("prepay_paid_to_id");

                    b.Property<int>("PrePaidToCategory")
                        .HasColumnType("int")
                        .HasColumnName("prepay_to_category");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("prepay_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("prepay_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_pre_paid_payments", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.ReceivableExchangeNonExchange", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("r_ex_nex_amount");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_custom_vote_id");

                    b.Property<int?>("ExchangeType")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_exchnage_type");

                    b.Property<int?>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_financial_year");

                    b.Property<int?>("LedgerAccountId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_ledger_account_id");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_office_id");

                    b.Property<int?>("ReceivableCategory")
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_receivable_category");

                    b.Property<int?>("ReceivableFromId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_receivable_from_id");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("r_ex_nex_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("r_ex_nex_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_receivable_exchange_non_exchange", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SabhaFundSource", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AccountSystem")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("account_system");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_sabha_fund_source", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SettlementCrossOrder", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int?>("SettlementCrossId")
                        .HasColumnType("int")
                        .HasColumnName("settlement_cross_id");

                    b.Property<int?>("SubImprestId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubImprestId");

                    b.ToTable("sub_imprest_settlement_corss_orders", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SingleOpenBalance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("single_bal_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("single_bal_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("single_bal_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("single_bal_custom_vote_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("single_bal_description");

                    b.Property<int?>("LedgerAccountId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("single_bal_ledger_account_id");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("single_bal_office_id");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("single_bal_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("single_bal_status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("single_bal_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("single_bal_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("single_bal_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_single_open", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.StoresCreditor", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stc_id");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("system_create_by");

                    b.Property<int?>("CustomVoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("stc_custom_vote_id");

                    b.Property<string>("GRN")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("stc_grn");

                    b.Property<decimal>("InvoiceAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("stc_invoice_amount");

                    b.Property<int?>("LedgerAccountId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("stc_ledger_account_id");

                    b.Property<int?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("stc_office_id");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("stc_order_no");

                    b.Property<DateTime?>("PurchasingDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("stc_purchasing_date");

                    b.Property<int?>("ReceivedNumber")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("stc_received_number");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("stc_sabha_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("stc_status");

                    b.Property<int>("SupplierCategory")
                        .HasColumnType("int")
                        .HasColumnName("stc_supplier_category");

                    b.Property<int?>("SupplierId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("stc_supplier_id");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("system_update_by");

                    b.HasKey("Id");

                    b.ToTable("vt_obl_stores_creditors", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubImprest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionStates")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("action_states");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<decimal?>("ExceedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("exceed_amount");

                    b.Property<int>("ExceedSettlementVoteId")
                        .HasColumnType("int")
                        .HasColumnName("exceed_settlement_vote_id");

                    b.Property<bool>("IsIllegal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_illegal");

                    b.Property<bool>("IsOpenBalance")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_open_balance");

                    b.Property<int?>("MixOrderId")
                        .HasColumnType("int")
                        .HasColumnName("dep_mix_order_id");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("longtext")
                        .HasColumnName("receipt_no");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<decimal?>("SettleByBills")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("settle_by_bills");

                    b.Property<decimal?>("SettleByCash")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("settle_by_cash");

                    b.Property<int?>("SettlementVoucherId")
                        .HasColumnType("int")
                        .HasColumnName("settlement_voucher_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("dep_status");

                    b.Property<int>("SubImprestVoteId")
                        .HasColumnType("int")
                        .HasColumnName("sub_imprest_vote_id");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id");

                    b.ToTable("sub_imprest", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubImprestDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("SubImprestSettlementId")
                        .HasColumnType("int")
                        .HasColumnName("sub_ipmrest_settlement_id");

                    b.Property<string>("URI")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uri");

                    b.HasKey("Id");

                    b.HasIndex("SubImprestSettlementId");

                    b.ToTable("sub_imprest_documents", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubImprestSettlement", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("dep_status");

                    b.Property<int?>("SubImprestId")
                        .HasColumnType("int")
                        .HasColumnName("sub_ipmrest_id");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int>("VoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("vote_detail_id");

                    b.HasKey("Id");

                    b.HasIndex("SubImprestId");

                    b.ToTable("sub_imprest_settlement", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubVoucherItem", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("ChequeAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("total_cheque_amount");

                    b.Property<string>("CommentOrDescription")
                        .HasColumnType("longtext")
                        .HasColumnName("comment_or_description");

                    b.Property<decimal?>("CrossAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("cross_amount");

                    b.Property<decimal>("NBTTotal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("nbt_total");

                    b.Property<int?>("PayeeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("payee_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal?>("Stamp")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("stamp");

                    b.Property<int?>("SubVoucherNo")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("sub_voucher_no");

                    b.Property<decimal>("VATTotal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vat_total");

                    b.Property<int?>("VoucherId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.Property<decimal>("VoucherItemAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("amount");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("VoucherId", "SubVoucherNo")
                        .IsUnique();

                    b.ToTable("vt_lgr_pmnt_sub_voucher_item", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.Supplementary", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<string>("ActionNote")
                        .HasColumnType("longtext")
                        .HasColumnName("action_system_date");

                    b.Property<decimal?>("ActionSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_allocation");

                    b.Property<decimal?>("ActionSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("action_snapshot_balance");

                    b.Property<int>("ActionState")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("from_amount");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("RequestBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("requet_by");

                    b.Property<DateTime?>("RequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_date");

                    b.Property<string>("RequestNote")
                        .HasColumnType("longtext")
                        .HasColumnName("requet_note");

                    b.Property<decimal?>("RequestSnapshotAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_allocation");

                    b.Property<decimal?>("RequestSnapshotBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("request_snapshot_balance");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<string>("SPLNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cut_province_no");

                    b.Property<int>("SabahId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("SystemActionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SystemRequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_system_date");

                    b.Property<int>("VoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_balance_id");

                    b.Property<int>("VoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("vote_detail_id");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_vote_supplementary", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteJournalAdjustment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<string>("ActionNote")
                        .HasColumnType("longtext")
                        .HasColumnName("action_system_date");

                    b.Property<int>("ActionState")
                        .HasColumnType("int");

                    b.Property<decimal>("FromAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("from_amount");

                    b.Property<string>("JournalNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("journal_no");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("RequestBy")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("requet_by");

                    b.Property<DateTime?>("RequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_date");

                    b.Property<string>("RequestNote")
                        .HasColumnType("longtext")
                        .HasColumnName("requet_note");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<int>("SabahId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("SystemActionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SystemRequestDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requet_system_date");

                    b.Property<decimal>("ToAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("to_amount");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_vote_journal_adjustments", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteJournalItemFrom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("FromAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("from_amount");

                    b.Property<int>("FromVoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_journal_from_vote_balance_id");

                    b.Property<int>("FromVoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("from_vote_detail_id");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<int>("VoteJournalAdjustmentId")
                        .HasColumnType("int")
                        .HasColumnName("vote_journal_adjustment_id");

                    b.HasKey("Id");

                    b.HasIndex("VoteJournalAdjustmentId");

                    b.ToTable("vt_lgr_vote_journal_items_from", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteJournalItemTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<decimal>("ToAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("to_amount");

                    b.Property<int>("ToVoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_journal_to_vote_balance_id");

                    b.Property<int>("ToVoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("to_vote_detail_id");

                    b.Property<int>("VoteJournalAdjustmentId")
                        .HasColumnType("int")
                        .HasColumnName("vote_journal_adjustment_id");

                    b.HasKey("Id");

                    b.HasIndex("VoteJournalAdjustmentId");

                    b.ToTable("vt_lgr_vote_journal_items_to", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteLedgerBook", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_lb_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Credit")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_lb_credit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("vt_lb_date");

                    b.Property<decimal>("Debit")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_lb_debit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vt_lb_description");

                    b.Property<int?>("ExpenseItemId")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_expense_item_id");

                    b.Property<int?>("IncomeItemId")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_income_item_id");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("-")
                        .HasColumnName("vt_lb_item_code");

                    b.Property<int>("OfiiceId")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_office_id");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningTotal")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_lb_rn_total");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_sbha_id");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_session_id");

                    b.Property<DateTime?>("SystemActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_tr_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int>("VoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_vote_balance_id");

                    b.Property<int>("VoteBalanceTransactionTypes")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_vote_bal_tr_type");

                    b.Property<int>("VoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("vt_lb_vote_detail_id");

                    b.HasKey("Id");

                    b.ToTable("vt_ledger_book", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteLedgerBookDailyBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Credit")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("total_credit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<decimal>("Debit")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("total_debit");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningTotal")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("total_running_balance");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    b.Property<DateTime?>("SystemActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<decimal>("TotalDailyCredit")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("total_daily_credit");

                    b.Property<decimal>("TotalDailyDebit")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int>("VoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_balance_id");

                    b.Property<int>("VoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("vote_detail_id");

                    b.HasKey("Id");

                    b.ToTable("vt_ledger_book_daily_balance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.Voucher", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AccountTransferId")
                        .HasColumnType("int")
                        .HasColumnName("account_transfer_id");

                    b.Property<int>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<int?>("AdvancedBId")
                        .HasColumnType("int")
                        .HasColumnName("advanced_b_id");

                    b.Property<int?>("BankId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("bank_id");

                    b.Property<string>("CommentOrDescription")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("comment_or_description");

                    b.Property<int?>("CommitmentId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal?>("CrossAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("cross_amount");

                    b.Property<string>("FileNo")
                        .HasColumnType("longtext")
                        .HasColumnName("file_no");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<decimal>("NBTTotal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("nbt_total");

                    b.Property<int>("PayeeCategory")
                        .HasColumnType("int")
                        .HasColumnName("payee_category");

                    b.Property<int?>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2)
                        .HasColumnName("payment_status");

                    b.Property<DateTime?>("PreChairmanApprove")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("pre_chairman_approve");

                    b.Property<DateTime?>("PreCommitteeApprove")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("pre_committee_approve");

                    b.Property<string>("PreCommitteeNo")
                        .HasColumnType("longtext")
                        .HasColumnName("pre_committee_no");

                    b.Property<DateTime?>("PreCouncilApprove")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("per_council_approve_date");

                    b.Property<string>("PreCouncilNo")
                        .HasColumnType("longtext")
                        .HasColumnName("per_council_no");

                    b.Property<int?>("RePaymentOrderId")
                        .HasColumnType("int")
                        .HasColumnName("repayment_order_id");

                    b.Property<int?>("RefundId")
                        .HasColumnType("int")
                        .HasColumnName("refund_id");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    b.Property<int?>("SettlementId")
                        .HasColumnType("int")
                        .HasColumnName("settlement_id");

                    b.Property<decimal?>("StampTotal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("stamp_total");

                    b.Property<int?>("SubImprestId")
                        .HasColumnType("int")
                        .HasColumnName("sub_imprest_id");

                    b.Property<DateTime?>("SubjectToApprove")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("subject_to_approve");

                    b.Property<DateTime?>("SystemCreateAt")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<decimal>("TotalChequeAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("total_cheque_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<decimal>("VATTotal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vat_total");

                    b.Property<decimal>("VoucherAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("voucher_amount");

                    b.Property<int?>("VoucherCategory")
                        .HasColumnType("int")
                        .HasColumnName("voucher_category");

                    b.Property<string>("VoucherSequenceNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("voucher_sequence_number");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_pmnt_voucher", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherActionLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<int?>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("vt_lgr_pmnt_voucher_action_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherCheque", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("BankId")
                        .HasColumnType("int")
                        .HasColumnName("bank_id");

                    b.Property<int?>("ChequeCategory")
                        .HasColumnType("int")
                        .HasColumnName("cheque_category");

                    b.Property<string>("ChequeNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cheque_no");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("GrpId")
                        .HasColumnType("longtext")
                        .HasColumnName("grp_id");

                    b.Property<bool?>("IsPrinted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_printed");

                    b.Property<int>("PayeeCategory")
                        .HasColumnType("int")
                        .HasColumnName("payee_category");

                    b.Property<int>("PayeeId")
                        .HasColumnType("int")
                        .HasColumnName("payee_id");

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payee_name");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("SystemCreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_create_at");

                    b.Property<DateTime?>("SystemUpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_update_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<string>("VoucherIdsAsString")
                        .HasColumnType("longtext")
                        .HasColumnName("voucher_id_as_string");

                    b.Property<string>("VoucherItemIds")
                        .HasColumnType("longtext")
                        .HasColumnName("voucher_item_id");

                    b.HasKey("Id");

                    b.ToTable("vt_lgr_pmnt_voucher_cheque", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherChequeActionLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<int?>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<int?>("VoucherChequeId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_cheque_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherChequeId");

                    b.ToTable("vt_lgr_pmnt_voucher_cheque_action_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherCrossOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("amount");

                    b.Property<int?>("CrossOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("cross_order_id");

                    b.Property<int>("OrderType")
                        .HasColumnType("int")
                        .HasColumnName("order_type");

                    b.Property<int>("SubVoucherItemId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_item_id");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("SubVoucherItemId");

                    b.ToTable("vt_lgr_pmnt_voucher_cross_orders", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("DocType")
                        .HasColumnType("longtext")
                        .HasColumnName("doc_type");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uri");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("vt_lgr_pmnt_voucher_doucument", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uri");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("vt_lgr_pmnt_voucher_invoice", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherItemsForCheque", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("SubVoucherItemId")
                        .HasColumnType("int")
                        .HasColumnName("sub_voucher_item_id");

                    b.Property<int>("VoucherChequeId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_cheque_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherChequeId");

                    b.ToTable("vt_lgr_pmnt_voucher_cheque_voucher_items", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherLine", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CommentOrDescription")
                        .HasColumnType("longtext")
                        .HasColumnName("comment_or_description");

                    b.Property<int?>("CommitmentLineId")
                        .HasColumnType("int")
                        .HasColumnName("commitment_line_id");

                    b.Property<decimal>("NBT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("nbt");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal?>("RptBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rpt_balance");

                    b.Property<decimal?>("RptBudgetAllocation")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rpt_budget_allocation");

                    b.Property<decimal?>("RptExpenditure")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rpt_expenditure");

                    b.Property<decimal>("SurchargeAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("surcharge_amount");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<decimal>("VAT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vat");

                    b.Property<int>("VoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_balance_id");

                    b.Property<string>("VoteCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vote_code");

                    b.Property<int>("VoteId")
                        .HasColumnType("int")
                        .HasColumnName("vote_id");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("vt_lgr_pmnt_voucher_line", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherSubLine", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<decimal>("NBT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("nbt");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<decimal>("VAT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vat");

                    b.Property<int?>("VoucherLineId")
                        .HasColumnType("int")
                        .HasColumnName("voucher_line_id");

                    b.HasKey("Id");

                    b.HasIndex("VoucherLineId");

                    b.ToTable("vt_lgr_voucher_sub_line", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.TradeTax.BusinessNature", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("business_nature_id");

                    b.Property<int?>("ActiveStatus")
                        .HasColumnType("int")
                        .HasColumnName("active_status");

                    b.Property<string>("BusinessNatureName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("business_nature_name");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("business_nature_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("business_nature_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("ID");

                    b.ToTable("trade_tax_business_natures", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.TradeTax.BusinessSubNature", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("business_subnature_id");

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int")
                        .HasColumnName("active_status");

                    b.Property<int>("BusinessNatureID")
                        .HasColumnType("int")
                        .HasColumnName("business_nature_id");

                    b.Property<string>("BusinessSubNatureName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("business_subnature_name");

                    b.Property<int>("BusinessSubNatureStatus")
                        .HasColumnType("int")
                        .HasColumnName("business_subnature_status");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("OtherCharges")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("other_charges");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("tax_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("ID");

                    b.HasIndex("BusinessNatureID");

                    b.ToTable("trade_tax_business_subnatures", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.TradeTax.TaxValue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tax_value_id");

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int")
                        .HasColumnName("active_status");

                    b.Property<decimal>("AnnualValueMaximum")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("annual_value_maximum");

                    b.Property<decimal>("AnnualValueMinimum")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("annual_value_minimum");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("tax_value");

                    b.Property<int>("TaxTypeID")
                        .HasColumnType("int")
                        .HasColumnName("tax_type_id");

                    b.Property<int>("TaxValueStatus")
                        .HasColumnType("int")
                        .HasColumnName("tax_value_status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("ID");

                    b.ToTable("trade_tax_tax_values", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.TradeTax.TradeTaxVoteAssignment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int")
                        .HasColumnName("active_status");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("TaxTypeID")
                        .HasColumnType("int")
                        .HasColumnName("tax_type_id");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int>("VoteAssignmentDetailID")
                        .HasColumnType("int")
                        .HasColumnName("vote_assignement_detail_id");

                    b.HasKey("ID");

                    b.HasIndex("SabhaID", "TaxTypeID")
                        .IsUnique();

                    b.ToTable("trade_tax_vote_assignments", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.AccountBalanceDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("acc_bd_id");

                    b.Property<int>("AccountDetailID")
                        .HasColumnType("int")
                        .HasColumnName("acc_bd_acc_d_id");

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("acc_bd_bal_amount");

                    b.Property<DateTime?>("EnteredDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("acc_bd_enter_date");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<int>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("acc_sabha_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("acc_bd_status");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("acc_bd_year");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.HasIndex("AccountDetailID");

                    b.ToTable("account_bal_details", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.AccountDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("acc_d_id");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("acc_d_acc_no");

                    b.Property<string>("BankCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("acc_d_bank_code");

                    b.Property<int?>("BankID")
                        .HasColumnType("int")
                        .HasColumnName("acc_d_bank_id")
                        .HasComment("control db fk");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("acc_d_branch_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("ExpenseHold")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("expense_hold");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("acc_d_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("acc_d_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("acc_d_name_tamil");

                    b.Property<int?>("OfficeID")
                        .HasColumnType("int")
                        .HasColumnName("acc_d_office_id");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int")
                        .HasColumnName("row_status");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("running_balance");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("acc_d_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VoteId")
                        .HasColumnType("int")
                        .HasColumnName("acc_d_vote_id");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("account_details", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalancesheetBalance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_balancesheet_bal_id");

                    b.Property<double>("Balance")
                        .HasColumnType("double")
                        .HasColumnName("vt_balancesheet_bal_balance");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balancesheet_bal_comment");

                    b.Property<DateTime?>("EnteredDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("vt_balancesheet_bal_enter_date");

                    b.Property<int>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balancesheet_bal_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_balancesheet_bal_status");

                    b.Property<int>("VoteDetailID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balancesheet_bal_vote_id");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("vt_balancesheet_bal_year");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("vt_balancesheet_balance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalancesheetSubtitle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subtitle_id");

                    b.Property<int?>("BalsheetTitleID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subtitle_title_id");

                    b.Property<int?>("BankAccountID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subtitle_bank_account_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_subtitle_code");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_subtitle_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_subtitle_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_subtitle_name_tamil");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subtitle_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subtitle_status");

                    b.HasKey("ID");

                    b.HasIndex("BalsheetTitleID");

                    b.ToTable("vt_balsheet_subtitle", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalancesheetTitle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_title_id");

                    b.Property<int?>("Balpath")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_title_balpath");

                    b.Property<int?>("ClassificationID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_title_classification_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_title_code");

                    b.Property<int?>("MainLedgerAccountID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_title_mainlegr_acct_id");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_title_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_title_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_title_name_tamil");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_title_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_title_status");

                    b.HasKey("ID");

                    b.ToTable("vt_balsheet_title", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalsheetSubledgerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BalsheetLedgerAccountId")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subledger_balsheet_ledger_account_id");

                    b.Property<int>("COAVersionId")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subledger_coa_version_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("vt_balsheet_subledger_code");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_subledger_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_subledger_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_balsheet_subledger_name_tamil");

                    b.Property<int>("StatusID")
                        .HasColumnType("int")
                        .HasColumnName("vt_balsheet_subledger_status_id");

                    b.HasKey("Id");

                    b.HasIndex("BalsheetLedgerAccountId");

                    b.ToTable("vt_balsheet_subledger_account", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Budget", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bdgt_id");

                    b.Property<decimal?>("AnnualAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_annual_amount");

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_april");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_august");

                    b.Property<decimal?>("BudgetTotal")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_total");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bdgt_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("bdgt_created_by");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_december");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_february");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_january");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_july");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_june");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_march");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_may");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_november");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_october");

                    b.Property<decimal?>("Q1Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_q1_amount");

                    b.Property<decimal?>("Q2Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_q2_amount");

                    b.Property<decimal?>("Q3Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_q3_amount");

                    b.Property<decimal?>("Q4Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_q4_amount");

                    b.Property<int>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("bdgt_sabha_id");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bdgt_september");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("bdgt_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("bdgt_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("bdgt_updated_by");

                    b.Property<int>("VoteDetailId")
                        .HasColumnType("int")
                        .HasColumnName("bdgt_votedetail_id");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("bdgt_year");

                    b.HasKey("Id");

                    b.HasIndex("Year", "VoteDetailId")
                        .IsUnique();

                    b.ToTable("vt_budget", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Classification", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_clsf_id");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vt_clsf_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("vt_clsf_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_clsf_description");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_clsf_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("vt_clsf_updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("vt_classification", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.CustomVoteBalance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_id");

                    b.Property<decimal?>("AllocationAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cstm_vote_bal_allocation_amount");

                    b.Property<decimal>("CarryForwardCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_carry_forward_total_credit");

                    b.Property<decimal>("CarryForwardDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_carry_forward_total_debit");

                    b.Property<decimal>("ChildrenCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_children_credit");

                    b.Property<decimal>("ChildrenDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_children_debit");

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_classification_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_credit");

                    b.Property<decimal>("CreditDebitCarryForwardRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_credit_debit_carry_forward_balance");

                    b.Property<decimal>("CreditDebitRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_credit_debit_balance");

                    b.Property<decimal>("CreditDebitSurchargeRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_credit_debit_surcharge_balance");

                    b.Property<int?>("CustomVoteDetailId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal__csmtvote_id");

                    b.Property<int?>("CustomVoteDetailIdParentId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_csmt_vote_detail_parent_id");

                    b.Property<decimal>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_debit");

                    b.Property<int>("Depth")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_depth");

                    b.Property<decimal?>("EstimatedIncome")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_estimated_income_amount");

                    b.Property<bool?>("IsCarryForward")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("vt_cstm_vote_bal_is_carry_forward");

                    b.Property<bool?>("IsSubLevel")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("vt_cstm_vote_bal_is_sublevel");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_month");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_parent_id");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_running_balance");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_sabha_id");

                    b.Property<int?>("SessionIdByOffice")
                        .HasColumnType("int")
                        .HasColumnName("session_id_by_office");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_status");

                    b.Property<decimal>("SurchargeCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_surcharge_total_credit");

                    b.Property<decimal>("SurchargeDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_surcharge_total_debit");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<decimal>("TakeHoldAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cstm_vote_bal_take_hold_amount");

                    b.Property<decimal>("TakeHoldRate")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cstm_vote_bal_take_hold_rate");

                    b.Property<decimal>("TotalCommitted")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_total_commited");

                    b.Property<decimal>("TotalHold")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_total_hold");

                    b.Property<decimal>("TotalPending")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_total_pending");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_transaction_type");

                    b.Property<int>("TransferFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vt_cstm_vote_transfer_flag");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_year");

                    b.HasKey("Id");

                    b.HasIndex("CustomVoteDetailId", "Year", "Status")
                        .IsUnique();

                    b.ToTable("vt_custom_vote_balance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.CustomVoteBalanceActionLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<int?>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<int?>("CustomVoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("cstm_vote_balance_id");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.HasKey("Id");

                    b.HasIndex("CustomVoteBalanceId");

                    b.ToTable("vt_custom_vote_balance_action_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.CustomVoteBalanceLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_id");

                    b.Property<decimal?>("AllocationAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_allocation_amount");

                    b.Property<decimal?>("AllocationExchangeAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_allocation_exchange_amount");

                    b.Property<int?>("AppCategory")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_app_category");

                    b.Property<decimal>("CarryForwardCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_carry_forward_total_credit");

                    b.Property<decimal>("CarryForwardDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_carry_forward_total_debit");

                    b.Property<decimal>("ChildrenCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_children_total_credit");

                    b.Property<decimal>("ChildrenDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_children_total_debit");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cstm_vote_bal_lg_code");

                    b.Property<decimal>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_total_credit");

                    b.Property<decimal>("CreditDebitCarryForwardRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_credit_debit_carry_forward_balance");

                    b.Property<decimal>("CreditDebitRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_credit_debit_balance");

                    b.Property<decimal>("CreditDebitSurchargeRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_credit_debit_surcharge_balance");

                    b.Property<int?>("CustomVoteBalanceId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_csmt_vote_bal_id");

                    b.Property<int?>("CustomVoteDetailId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_cus_vote_bal_lg_csmt_vote_id");

                    b.Property<int?>("CustomVoteDetailIdParentId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_csmt_vote_detail_parent_id");

                    b.Property<decimal>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_total_debit");

                    b.Property<int>("Depth")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_depth");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cstm_vote_bal_lg_description");

                    b.Property<decimal?>("EstimatedIncome")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_estimated_income_amount");

                    b.Property<decimal>("ExchangedAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_exchange_amount");

                    b.Property<bool?>("IsCarryForward")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("vt_cstm_vote_bal_lg_is_carry_forward");

                    b.Property<bool?>("IsSubLevel")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("vt_cstm_vote_bal_lg_is_sublevel");

                    b.Property<int?>("ModulePrimaryKey")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_module_primary_key");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_month");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_parent_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningBalance")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cstm_vote_bal_lg_running_balance");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_sabha_id");

                    b.Property<int?>("SessionIdByOffice")
                        .HasColumnType("int")
                        .HasColumnName("session_id_by_office");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_status");

                    b.Property<string>("SubCode")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_cstm_vote_bal_lg_sub_code");

                    b.Property<decimal>("SurchargeCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_surcharge_total_credit");

                    b.Property<decimal>("SurchargeDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_surcharge_total_debit");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<decimal>("TakeHoldAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cstm_vote_bal_lg_take_hold_amount");

                    b.Property<decimal>("TakeHoldRate")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_cstm_vote_bal_lg_take_hold_rate");

                    b.Property<decimal>("TotalCommitted")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_total_commited");

                    b.Property<decimal>("TotalHold")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_lg_total_hold");

                    b.Property<decimal>("TotalPending")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_cstm_vote_bal_total_lg_pending");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_transaction_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("vt_cstm_vote_bal_lg_year");

                    b.HasKey("Id");

                    b.HasIndex("CustomVoteBalanceId");

                    b.ToTable("vt_custom_vote_balance_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.IncomeExpenditureSubledgerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("COAVersionId")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_exp_subledger_coa_version_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("vt_inc_exp_subledger_code");

                    b.Property<int?>("IncomeExpenditureLedgerAccountId")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_exp_subledger_ledger_account_id");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_exp_subledger_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_exp_subledger_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_exp_subledger_name_tamil");

                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("vt_inc_exp_subledger_status_id");

                    b.HasKey("Id");

                    b.HasIndex("IncomeExpenditureLedgerAccountId");

                    b.ToTable("vt_inc_exp_subledger_account", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.IncomeSubtitle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_subtitle_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_subtitle_name_code");

                    b.Property<int?>("IncomeTitleID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_subtitle_title_id");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_subtitle_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_subtitle_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_subtitle_name_tamil");

                    b.Property<int?>("ProgrammeID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_subtitle_programme_id");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_subtitle_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_subtitle_status");

                    b.HasKey("ID");

                    b.HasIndex("IncomeTitleID");

                    b.ToTable("vt_inc_subtitle", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.IncomeTitle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_title_id");

                    b.Property<int?>("ClassificationID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_title_classification_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_title_name_code");

                    b.Property<int?>("MainLedgerAccountID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_title_mainlegr_acct_id");

                    b.Property<string>("NameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_title_name_english");

                    b.Property<string>("NameSinhala")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_title_name_sinhala");

                    b.Property<string>("NameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_title_name_tamil");

                    b.Property<int?>("ProgrammeID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_title_programme_id");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_title_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_title_status");

                    b.HasKey("ID");

                    b.ToTable("vt_inc_title", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.LedgerAccountGroupAssignment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ldger_acc_grp_asgn_id");

                    b.Property<int>("AccountSystemVersion")
                        .HasColumnType("int")
                        .HasColumnName("ldger_acc_grp_asgn_account_system_version");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ldger_acc_grp_asgn_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("LedgerAccountGroupCategory")
                        .HasColumnType("int")
                        .HasColumnName("ldger_acc_grp_asgn_category");

                    b.Property<string>("LedgerAccountGroupCategoryDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ldger_acc_grp_asgn_catgry_desc");

                    b.Property<string>("SubtitleCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ldger_acc_grp_asgn_subtitle_code");

                    b.Property<string>("SubtitleDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ldger_acc_grp_asgn_subtitle_desc");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("ldger_acc_grp_asgn_updated_at");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("vt_ldger_acc_grp_assign", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.MainLedgerAccount", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_mla_id");

                    b.Property<int>("ClassificationId")
                        .HasColumnType("int")
                        .HasColumnName("vt_mla_classification_id");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vt_mla_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("vt_mla_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_mla_description");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_mla_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("vt_mla_updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("ClassificationId");

                    b.ToTable("vt_main_ledger_account", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Programme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_programme_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_programme_code");

                    b.Property<string>("NameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_programme_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_programme_name_sinhala");

                    b.Property<string>("NameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_programme_name_tamil");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_programme_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_programme_status");

                    b.HasKey("ID");

                    b.ToTable("vt_programme", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_project_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_project_code");

                    b.Property<string>("NameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_project_english");

                    b.Property<string>("NameSinhala")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_project_sinhala");

                    b.Property<string>("NameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_project_tamil");

                    b.Property<int?>("ProgrammeID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_project_programme_id");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_project_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_project_status");

                    b.HasKey("ID");

                    b.HasIndex("ProgrammeID");

                    b.ToTable("vt_inc_project", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.SpecialLedgerAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("SabhaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("acc_sabha_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<string>("VoteCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vote_code");

                    b.Property<int?>("VoteId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vote_id");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("SabhaId", "TypeId")
                        .IsUnique();

                    b.ToTable("special_ledger_accounts", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.SpecialLedgerAccountTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("NameInEnglish")
                        .HasColumnType("longtext")
                        .HasColumnName("name_in_english");

                    b.Property<string>("NameInSinhala")
                        .HasColumnType("longtext")
                        .HasColumnName("name_in_sinhala");

                    b.Property<string>("NameInTamil")
                        .HasColumnType("longtext")
                        .HasColumnName("name_in_tamil");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("special_ledger_account_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.SubProject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_sub_project_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_sub_project_name_code");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_sub_project_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_sub_project_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_inc_sub_project_name_tamil");

                    b.Property<int?>("ProgrammeID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_sub_project_programme_id");

                    b.Property<int?>("ProjectID")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_sub_project_project_id");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_sub_project_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_inc_sub_project_status");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("vt_inc_sub_project", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteBalance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_id");

                    b.Property<decimal?>("AllocationAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_vote_bal_allocation_amount");

                    b.Property<decimal>("CarryForwardCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_carry_forward_total_credit");

                    b.Property<decimal>("CarryForwardDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_carry_forward_total_debit");

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_classification_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_credit");

                    b.Property<decimal>("CreditDebitCarryForwardRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_credit_debit_carry_forward_balance");

                    b.Property<decimal>("CreditDebitRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_credit_debit_balance");

                    b.Property<decimal>("CreditDebitSurchargeRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_credit_debit_surcharge_balance");

                    b.Property<decimal>("CustomVoteCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_cstm_vt_credit");

                    b.Property<decimal>("CustomVoteDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_cstm_vt_debit");

                    b.Property<decimal>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_debit");

                    b.Property<decimal?>("EstimatedIncome")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_estimated_income_amount");

                    b.Property<bool?>("IsCarryForward")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("vt_vote_bal_is_carry_forward");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_month");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_running_balance");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_sabha_id");

                    b.Property<int?>("SessionIdByOffice")
                        .HasColumnType("int")
                        .HasColumnName("session_id_by_office");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_status");

                    b.Property<decimal>("SurchargeCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_surcharge_total_credit");

                    b.Property<decimal>("SurchargeDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_surcharge_total_debit");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<decimal>("TakeHoldAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_vote_bal_take_hold_amount");

                    b.Property<decimal>("TakeHoldRate")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_vote_bal_take_hold_rate");

                    b.Property<decimal>("TotalCommitted")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_total_commited");

                    b.Property<decimal>("TotalHold")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_total_hold");

                    b.Property<decimal>("TotalPending")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_total_pending");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_transaction_type");

                    b.Property<int>("TransferFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vt_vote_transfer_flag");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VoteDetailId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_vote_id");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_year");

                    b.HasKey("Id");

                    b.HasIndex("VoteDetailId", "Year", "Status")
                        .IsUnique();

                    b.ToTable("vt_vote_balance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteBalanceActionLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("action_by");

                    b.Property<DateTime?>("ActionDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("action_date");

                    b.Property<int?>("ActionState")
                        .HasColumnType("int")
                        .HasColumnName("action_state");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<int?>("VoteBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("vote_balance_id");

                    b.HasKey("Id");

                    b.HasIndex("VoteBalanceId");

                    b.ToTable("vt_vote_balance_action_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteBalanceLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_id");

                    b.Property<decimal?>("AllocationAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_allocation_amount");

                    b.Property<decimal?>("AllocationExchangeAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_allocation_exchange_amount");

                    b.Property<int?>("AppCategory")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_app_category");

                    b.Property<decimal>("CarryForwardCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_carry_forward_total_credit");

                    b.Property<decimal>("CarryForwardDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_carry_forward_total_debit");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_vote_bal_lg_code");

                    b.Property<decimal>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_total_credit");

                    b.Property<decimal>("CreditDebitCarryForwardRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_credit_debit_carry_forward_balance");

                    b.Property<decimal>("CreditDebitRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_credit_debit_balance");

                    b.Property<decimal>("CreditDebitSurchargeRunningBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_credit_debit_surcharge_balance");

                    b.Property<decimal>("CustomVoteCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_cstm_vt_total_credit");

                    b.Property<decimal>("CustomVoteDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_cstm_vt_total_debit");

                    b.Property<decimal>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_total_debit");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_vote_bal_lg_description");

                    b.Property<decimal?>("EstimatedIncome")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_estimated_income_amount");

                    b.Property<decimal>("ExchangedAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_exchange_amount");

                    b.Property<bool?>("IsCarryForward")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("vt_vote_bal_lg_is_carry_forward");

                    b.Property<int?>("ModulePrimaryKey")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_module_primary_key");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_month");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal>("RunningBalance")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_vote_bal_lg_running_balance");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_sabha_id");

                    b.Property<int?>("SessionIdByOffice")
                        .HasColumnType("int")
                        .HasColumnName("session_id_by_office");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_status");

                    b.Property<string>("SubCode")
                        .HasColumnType("longtext")
                        .HasColumnName("vt_vote_bal_lg_sub_code");

                    b.Property<decimal>("SurchargeCredit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_surcharge_total_credit");

                    b.Property<decimal>("SurchargeDebit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_surcharge_total_debit");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("system_action_at");

                    b.Property<decimal>("TakeHoldAmount")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_vote_bal_lg_take_hold_amount");

                    b.Property<decimal>("TakeHoldRate")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("vt_vote_bal_lg_take_hold_rate");

                    b.Property<decimal>("TotalCommitted")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_total_commited");

                    b.Property<decimal>("TotalHold")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_lg_total_hold");

                    b.Property<decimal>("TotalPending")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vt_vote_bal_total_lg_pending");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_transaction_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VoteBalanceId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_vote_bal_id");

                    b.Property<int?>("VoteDetailId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_vote_id");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("vt_vote_bal_lg_year");

                    b.HasKey("Id");

                    b.HasIndex("VoteBalanceId");

                    b.ToTable("vt_vote_balance_log", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteDetail", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vt_d_id");

                    b.Property<int?>("ClassificationID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_classsification_id");

                    b.Property<string>("ClasssificationDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_classsification_desc");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_vote_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("vt_d_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_created_by");

                    b.Property<int?>("IncomeOrExpense")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_income_or_expense");

                    b.Property<string>("IncomeSubtitleCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subtitle_code");

                    b.Property<int>("IncomeSubtitleID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_subtitle_id");

                    b.Property<string>("IncomeSubtitleNameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subtitle_name_english");

                    b.Property<string>("IncomeSubtitleNameSinhala")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subtitle_name_sinhala");

                    b.Property<string>("IncomeSubtitleNameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subtitle_name_tamil");

                    b.Property<string>("IncomeTitleCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_title_code");

                    b.Property<int>("IncomeTitleID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_title_id");

                    b.Property<string>("IncomeTitleNameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_title_name_english");

                    b.Property<string>("IncomeTitleNameSinhala")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_title_name_sinhala");

                    b.Property<string>("IncomeTitleNameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_title_name_tamil");

                    b.Property<string>("MainLedgerAccountDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_main_ledger_acct_desc");

                    b.Property<int?>("MainLedgerAccountID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_main_ledger_acct_id");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_vote_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_vote_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_vote_name_tamil");

                    b.Property<string>("ProgrammeCode")
                        .HasColumnType("longtext");

                    b.Property<int>("ProgrammeID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_programme_id");

                    b.Property<string>("ProgrammeNameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_programme_name_english");

                    b.Property<string>("ProgrammeNameSinhala")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_programme_name_sinhala");

                    b.Property<string>("ProgrammeNameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_programme_name_tamil");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_project_code");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_project_id");

                    b.Property<string>("ProjectNameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_project_name_english");

                    b.Property<string>("ProjectNameSinhala")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_project_name_sinhala");

                    b.Property<string>("ProjectNameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_project_name_tamil");

                    b.Property<string>("SabhaCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_sabha_code");

                    b.Property<int>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_sabha_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_status");

                    b.Property<int?>("SubLedgerId")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_sub_ledger_id");

                    b.Property<string>("SubprojectCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subproject_code");

                    b.Property<int>("SubprojectID")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_subproject_id");

                    b.Property<string>("SubprojectNameEnglish")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subproject_name_english");

                    b.Property<string>("SubprojectNameSinhala")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subproject_name_sinhala");

                    b.Property<string>("SubprojectNameTamil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vt_d_subproject_name_tamil");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("vt_d_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_updated_by");

                    b.Property<int?>("VoteOrBal")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_vote_or_bal");

                    b.Property<int?>("VoteOrder")
                        .HasColumnType("int")
                        .HasColumnName("vt_d_vote_order");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("vt_vote_details", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.AccountTransferRefunding", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.AccountTransfer", "AccountTransfer")
                        .WithMany("AccountTransferRefunding")
                        .HasForeignKey("AccountTransferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountTransfer");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CommitmentActionsLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Commitment", "Commitment")
                        .WithMany("ActionLog")
                        .HasForeignKey("CommitmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Commitment");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CommitmentLine", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Commitment", "Commitment")
                        .WithMany("CommitmentLine")
                        .HasForeignKey("CommitmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commitment");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CommitmentLineVotes", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.CommitmentLine", "CommitmentLine")
                        .WithMany("CommitmentLineVotes")
                        .HasForeignKey("CommitmentLineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommitmentLine");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.DepositForVoucher", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("DepositsForVoucher")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.EmployeeLoansForVoucher", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("EmployeeLoansForVoucher")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FR66FromItem", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.FR66Transfer", "FR66Transfer")
                        .WithMany("FR66FromItems")
                        .HasForeignKey("FR66Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FR66Transfer");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FR66ToItem", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.FR66Transfer", "FR66Transfer")
                        .WithMany("FR66ToItems")
                        .HasForeignKey("FR66Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FR66Transfer");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.IndustrialCreditors", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.IndustrialCreditorsDebtorsTypes", "CreditorType")
                        .WithMany("IndustrialCreditors")
                        .HasForeignKey("CreditorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_creditor_type_sabha_fund_dource");

                    b.HasOne("CAT20.Core.Models.FinalAccount.SabhaFundSource", null)
                        .WithMany("IndustrialCreditors")
                        .HasForeignKey("SabhaFundSourceId");

                    b.Navigation("CreditorType");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.IndustrialDebtors", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.IndustrialCreditorsDebtorsTypes", "DebtorType")
                        .WithMany("IndustrialDebtors")
                        .HasForeignKey("DebtorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_debtor_type_sabha_fund_dource");

                    b.HasOne("CAT20.Core.Models.FinalAccount.SabhaFundSource", null)
                        .WithMany("IndustrialDebtors")
                        .HasForeignKey("SabhaFundSourceId");

                    b.Navigation("DebtorType");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLineLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.logs.CommitmentLog", "CommitmentLog")
                        .WithMany("CommitmentLineLog")
                        .HasForeignKey("CommitmentLogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommitmentLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLineVotesLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.logs.CommitmentLineLog", "CommitmentLineLog")
                        .WithMany("CommitmentLineVotesLog")
                        .HasForeignKey("CommitmentLineLogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommitmentLineLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Commitment", "Commitment")
                        .WithMany("CommitmentLog")
                        .HasForeignKey("CommitmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Commitment");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.VoucherChequeLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.VoucherCheque", "VoucherCheque")
                        .WithMany("VoucherChequeLogs")
                        .HasForeignKey("VoucherChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VoucherCheque");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.VoucherLineLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.logs.VoucherLog", "VoucherLog")
                        .WithMany("voucherLineLog")
                        .HasForeignKey("VoucherLogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VoucherLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.VoucherLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("VoucherLog")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SettlementCrossOrder", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.SubImprest", "SubImprest")
                        .WithMany("SettlementCrossOrders")
                        .HasForeignKey("SubImprestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubImprest");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubImprestDocument", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.SubImprestSettlement", "SubImprestSettlement")
                        .WithMany("Documents")
                        .HasForeignKey("SubImprestSettlementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubImprestSettlement");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubImprestSettlement", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.SubImprest", "SubImprest")
                        .WithMany("SubImprestSettlements")
                        .HasForeignKey("SubImprestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SubImprest");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubVoucherItem", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("SubVoucherItems")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteJournalItemFrom", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.VoteJournalAdjustment", "VoteJournalAdjustment")
                        .WithMany("VoteJournalItemsFrom")
                        .HasForeignKey("VoteJournalAdjustmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VoteJournalAdjustment");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteJournalItemTo", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.VoteJournalAdjustment", "VoteJournalAdjustment")
                        .WithMany("VoteJournalItemsTo")
                        .HasForeignKey("VoteJournalAdjustmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VoteJournalAdjustment");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherActionLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("ActionLog")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherChequeActionLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.VoucherCheque", "VoucherCheque")
                        .WithMany("ActionLogs")
                        .HasForeignKey("VoucherChequeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("VoucherCheque");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherCrossOrder", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.SubVoucherItem", "SubVoucherItem")
                        .WithMany("VoucherCrossOrders")
                        .HasForeignKey("SubVoucherItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubVoucherItem");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherDocument", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("VoucherDocuments")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherInvoice", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("VoucherInvoices")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherItemsForCheque", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.VoucherCheque", "VoucherCheque")
                        .WithMany("VoucherItemsForCheque")
                        .HasForeignKey("VoucherChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VoucherCheque");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherLine", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.Voucher", "Voucher")
                        .WithMany("VoucherLine")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherSubLine", b =>
                {
                    b.HasOne("CAT20.Core.Models.FinalAccount.VoucherLine", "VoucherLine")
                        .WithMany("VoucherSubLines")
                        .HasForeignKey("VoucherLineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_voucher_line_id_voucher_subline_voucher_line_id");

                    b.Navigation("VoucherLine");
                });

            modelBuilder.Entity("CAT20.Core.Models.TradeTax.BusinessSubNature", b =>
                {
                    b.HasOne("CAT20.Core.Models.TradeTax.BusinessNature", "businessNature")
                        .WithMany("businessSubNatures")
                        .HasForeignKey("BusinessNatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_business_subnature_business_nature_id");

                    b.Navigation("businessNature");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.AccountBalanceDetail", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.AccountDetail", "accountDetail")
                        .WithMany("accountBalDetail")
                        .HasForeignKey("AccountDetailID")
                        .IsRequired()
                        .HasConstraintName("fk_acc_bd_acc_d_id");

                    b.Navigation("accountDetail");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalancesheetSubtitle", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.BalancesheetTitle", "balancesheetTitle")
                        .WithMany("balancesheetSubtitle")
                        .HasForeignKey("BalsheetTitleID")
                        .HasConstraintName("fk_vt_balsheet_subtitle_title_id");

                    b.Navigation("balancesheetTitle");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalsheetSubledgerAccount", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.BalancesheetSubtitle", "BalancesheetSubtitles")
                        .WithMany("SubLedgerAccounts")
                        .HasForeignKey("BalsheetLedgerAccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BalancesheetSubtitles");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.CustomVoteBalanceActionLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.CustomVoteBalance", "CustomVoteBalance")
                        .WithMany("CustomVoteBalanceActionLog")
                        .HasForeignKey("CustomVoteBalanceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CustomVoteBalance");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.CustomVoteBalanceLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.CustomVoteBalance", "CustomVoteBalance")
                        .WithMany("CustomVoteBalanceLog")
                        .HasForeignKey("CustomVoteBalanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomVoteBalance");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.IncomeExpenditureSubledgerAccount", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.IncomeSubtitle", "IncomeSubtitles")
                        .WithMany("SubLedgerAccounts")
                        .HasForeignKey("IncomeExpenditureLedgerAccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IncomeSubtitles");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.IncomeSubtitle", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.IncomeTitle", "incomeTitle")
                        .WithMany("incomeSubtitle")
                        .HasForeignKey("IncomeTitleID")
                        .HasConstraintName("fk_vt_inc_subtitle_title_id");

                    b.Navigation("incomeTitle");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.MainLedgerAccount", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.Classification", "Classifications")
                        .WithMany("MainLedgerAccount")
                        .HasForeignKey("ClassificationId")
                        .IsRequired();

                    b.Navigation("Classifications");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Project", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.Programme", "programme")
                        .WithMany("project")
                        .HasForeignKey("ProgrammeID")
                        .HasConstraintName("fk_vt_inc_project_programme_id");

                    b.Navigation("programme");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.SpecialLedgerAccounts", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.SpecialLedgerAccountTypes", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.SpecialLedgerAccountTypes", b =>
                {
                    b.HasOne("CAT20.Core.DTO.Vote.SpecialLedgerAccountTypesResource", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.SubProject", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.Project", "project")
                        .WithMany("subProject")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vt_inc_sub_project_project_id");

                    b.Navigation("project");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteBalance", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.VoteDetail", "VoteDetail")
                        .WithMany("VoteBalances")
                        .HasForeignKey("VoteDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VoteDetail");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteBalanceActionLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.VoteBalance", "VoteBalance")
                        .WithMany("ActionLogs")
                        .HasForeignKey("VoteBalanceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("VoteBalance");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteBalanceLog", b =>
                {
                    b.HasOne("CAT20.Core.Models.Vote.VoteBalance", "VoteBalance")
                        .WithMany("VoteBalanceLogs")
                        .HasForeignKey("VoteBalanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VoteBalance");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.AccountTransfer", b =>
                {
                    b.Navigation("AccountTransferRefunding");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.Commitment", b =>
                {
                    b.Navigation("ActionLog");

                    b.Navigation("CommitmentLine");

                    b.Navigation("CommitmentLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.CommitmentLine", b =>
                {
                    b.Navigation("CommitmentLineVotes");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.FR66Transfer", b =>
                {
                    b.Navigation("FR66FromItems");

                    b.Navigation("FR66ToItems");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.IndustrialCreditorsDebtorsTypes", b =>
                {
                    b.Navigation("IndustrialCreditors");

                    b.Navigation("IndustrialDebtors");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLineLog", b =>
                {
                    b.Navigation("CommitmentLineVotesLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.CommitmentLog", b =>
                {
                    b.Navigation("CommitmentLineLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.logs.VoucherLog", b =>
                {
                    b.Navigation("voucherLineLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SabhaFundSource", b =>
                {
                    b.Navigation("IndustrialCreditors");

                    b.Navigation("IndustrialDebtors");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubImprest", b =>
                {
                    b.Navigation("SettlementCrossOrders");

                    b.Navigation("SubImprestSettlements");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubImprestSettlement", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.SubVoucherItem", b =>
                {
                    b.Navigation("VoucherCrossOrders");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoteJournalAdjustment", b =>
                {
                    b.Navigation("VoteJournalItemsFrom");

                    b.Navigation("VoteJournalItemsTo");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.Voucher", b =>
                {
                    b.Navigation("ActionLog");

                    b.Navigation("DepositsForVoucher");

                    b.Navigation("EmployeeLoansForVoucher");

                    b.Navigation("SubVoucherItems");

                    b.Navigation("VoucherDocuments");

                    b.Navigation("VoucherInvoices");

                    b.Navigation("VoucherLine");

                    b.Navigation("VoucherLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherCheque", b =>
                {
                    b.Navigation("ActionLogs");

                    b.Navigation("VoucherChequeLogs");

                    b.Navigation("VoucherItemsForCheque");
                });

            modelBuilder.Entity("CAT20.Core.Models.FinalAccount.VoucherLine", b =>
                {
                    b.Navigation("VoucherSubLines");
                });

            modelBuilder.Entity("CAT20.Core.Models.TradeTax.BusinessNature", b =>
                {
                    b.Navigation("businessSubNatures");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.AccountDetail", b =>
                {
                    b.Navigation("accountBalDetail");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalancesheetSubtitle", b =>
                {
                    b.Navigation("SubLedgerAccounts");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.BalancesheetTitle", b =>
                {
                    b.Navigation("balancesheetSubtitle");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Classification", b =>
                {
                    b.Navigation("MainLedgerAccount");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.CustomVoteBalance", b =>
                {
                    b.Navigation("CustomVoteBalanceActionLog");

                    b.Navigation("CustomVoteBalanceLog");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.IncomeSubtitle", b =>
                {
                    b.Navigation("SubLedgerAccounts");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.IncomeTitle", b =>
                {
                    b.Navigation("incomeSubtitle");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Programme", b =>
                {
                    b.Navigation("project");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.Project", b =>
                {
                    b.Navigation("subProject");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteBalance", b =>
                {
                    b.Navigation("ActionLogs");

                    b.Navigation("VoteBalanceLogs");
                });

            modelBuilder.Entity("CAT20.Core.Models.Vote.VoteDetail", b =>
                {
                    b.Navigation("VoteBalances");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using CAT20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAT20.Data.HRMDb
{
    [DbContext(typeof(HRMDbContext))]
    [Migration("20241009075526_MIG_V2")]
    partial class MIG_V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_sinhala_ci")
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("CAT20.Core.Models.HRM.HRMSequenceNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("LastIndex")
                        .HasColumnType("int")
                        .HasColumnName("last_index");

                    b.Property<int>("ModuleType")
                        .HasColumnType("int")
                        .HasColumnName("module_type");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("prefix");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("Year", "SabhaId", "ModuleType")
                        .IsUnique();

                    b.ToTable("hrm_sequence_numbers", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_loan_id");

                    b.Property<string>("AdvanceBNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_ab_number");

                    b.Property<int>("AdvanceBStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_ab_advance_b_status");

                    b.Property<int>("AdvanceBTypeId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_type_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_loan_amount");

                    b.Property<int?>("BankAccId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_bank_acc_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_ab_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_created_by");

                    b.Property<decimal>("DeceasedBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_deceased_balance");

                    b.Property<DateOnly?>("DeceasedDate")
                        .HasColumnType("date")
                        .HasColumnName("hr_ab_deceased_date");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("hr_ab_description");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_employee_id");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_ab_end_date");

                    b.Property<int?>("Guarantor1Id")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_guarantor1_id");

                    b.Property<int?>("Guarantor2Id")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_guarantor2_id");

                    b.Property<decimal>("InstallmentAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_installment_amount");

                    b.Property<decimal>("InterestAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_interest_amount");

                    b.Property<decimal>("InterestPercentage")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_interest_percentage");

                    b.Property<bool>("IsNew")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hr_ab_is_new");

                    b.Property<int>("LedgerAccId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_ledger_acc_id");

                    b.Property<int>("NumberOfInstallments")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_number_of_installments");

                    b.Property<decimal>("OddInstallmentAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_odd_installment_amount");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_office_id");

                    b.Property<int>("RemainingInstallments")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_remaining_installments");

                    b.Property<int>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_ab_status_id");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_sabha_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_ab_start_date");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_ab_system_action_at");

                    b.Property<decimal>("TransferInOrOutBalanceAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_transfer_in_or_out_balance_amount");

                    b.Property<DateOnly?>("TransferInOrOutDate")
                        .HasColumnType("date")
                        .HasColumnName("hr_ab_transfer_in_or_out_date");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_ab_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_updated_by");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_voucher_id");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("longtext")
                        .HasColumnName("hr_ab_voucher_no");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceBTypeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Guarantor1Id");

                    b.HasIndex("Guarantor2Id");

                    b.ToTable("hr_advance_b", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_loan_attachment_id");

                    b.Property<int?>("AdvanceBId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_ab_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_created_by");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_ab_file_name");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_ab_file_path");

                    b.Property<int>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_loan_id");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_ab_status_id");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_ab_system_action_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_ab_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceBId");

                    b.ToTable("hr_advance_b_attachment", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBSettlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_settlement_id");

                    b.Property<int>("AdvanceBId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_advance_b_id");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_installment_amount");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_balance");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_ab_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_created_by");

                    b.Property<decimal?>("InterestAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_interest_amount");

                    b.Property<int>("PayMonth")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_pay_month");

                    b.Property<string>("SettlementCode")
                        .HasColumnType("longtext")
                        .HasColumnName("hr_ab_settlement_code");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_ab_status_id");

                    b.Property<DateTime?>("SystemActionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_ab_system_action_at");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_settlemt_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_ab_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceBId");

                    b.ToTable("hr_advance_b_settlement", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBTypeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_type_data_id");

                    b.Property<int>("AccountSystemVersionId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_acc_system_ver_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_ab_description");

                    b.Property<bool>("HasInterest")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hr_ab_has_interest");

                    b.Property<decimal?>("Interest")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_ab_interest");

                    b.Property<int?>("MaxInstalment")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_max_instalment");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_ab_status_id");

                    b.HasKey("Id");

                    b.ToTable("hr_advance_b_type_data", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBTypeLedgerMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_type_ledger_mapping_id");

                    b.Property<int>("AdvanceBTypeId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_type_id");

                    b.Property<int>("LastIndex")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_last_index");

                    b.Property<string>("LedgerCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("hr_ab_ledger_code");

                    b.Property<int>("LedgerId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_loan_ledger_id");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("hr_ab_prefix");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("hr_ab_sabha_id");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_ab_status_id");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceBTypeId");

                    b.ToTable("hr_advance_b_type_ledger_mapping", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.Address", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_addr_id");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_addr_line1");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_addr_line2");

                    b.Property<int>("AddressType")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_addr_typ_id");

                    b.Property<string>("CityTown")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_addr_city_town");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_addr_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_addr_created_by");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_addr_employee_id");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("hr_pf_addr_fax");

                    b.Property<int>("GnDivision")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_addr_gn_division");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_addr_postal_code");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_addr_status_id");

                    b.Property<string>("Telephone")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("hr_pf_addr_telephone");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_addr_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_addr_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("hr_pf_address", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.AgraharaCategoryData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_ac_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_ac_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_ac_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_agrahara_category_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gold",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Silver",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bronze",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.AppointmentTypeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_at_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_at_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_at_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_appointment_type_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Permanent",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Casual",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Contract",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Temporary",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Adesaka",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Acting",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            Name = "Itukirima",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.CarderStatusData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_cs_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_cs_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_cs_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_carder_status_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Local Authority",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Local Government",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Attached from Other Office",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Attached to Other Office",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ChildInfo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_ci_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_ci_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_ci_created_by");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_pf_ci_dob");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_ci_emp_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_ci_name");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_ci_status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_ci_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_ci_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("hr_pf_child_info", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ClassLevelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_cl_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_cl_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_cl_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_class_level_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Level I",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Level II",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Level III",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.Employee", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_id");

                    b.Property<int?>("CarderStausID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_carder_status");

                    b.Property<int?>("CivilStatus")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_civil_status");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_emp_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_created_by");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_pf_emp_dob");

                    b.Property<string>("EmployeeNo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_no");

                    b.Property<int?>("EmployeeTypeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_type");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_first_name");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("hr_pf_emp_full_name");

                    b.Property<int?>("GenderID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_gender");

                    b.Property<string>("Initials")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_initials");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_last_name");

                    b.Property<DateTime?>("MarriedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_pf_emp_married_date");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_middle_name");

                    b.Property<string>("MobileNo")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("hr_pf_emp_mobile_no");

                    b.Property<string>("NICNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_nic_no");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_office_id");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_passport_no");

                    b.Property<string>("PayNo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_pay_no");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_personal_email");

                    b.Property<string>("PersonalFileNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_personal_file_no");

                    b.Property<string>("PhotographPath")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_photo_path");

                    b.Property<int?>("ProgrammeId")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_programme_id");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_project_id");

                    b.Property<int?>("RailwayWarrant")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_railway_warrant");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_sabha_id");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_emp_status_id");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_sub_project_id");

                    b.Property<int>("Title")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_title");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_emp_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("CarderStausID");

                    b.HasIndex("EmployeeTypeID");

                    b.HasIndex("EmployeeNo", "SabhaId")
                        .IsUnique();

                    b.ToTable("hr_pf_employee", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.EmployeeTypeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_typ_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_emp_typ_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_emp_typ_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_employee_type_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "New Appointment",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Existing",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Transfer In",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Temporary Hold",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.FundingSourceData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_fs_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_fs_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_fs_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_funding_source_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Reimbursed",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Council Fund",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.GradeLevelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_gl_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_gl_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_gl_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_grade_level_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Level I",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Level II",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Level III",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.JobTitleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_jt_dt_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_jt_dt_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_jt_dt_name");

                    b.Property<int>("ServiceTypeDataId")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_jt_st_dt_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_tj_dt_status");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeDataId");

                    b.ToTable("hr_pf_job_title_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.NetSalaryAgent", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_nt_agnt_id");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_nt_agnt_account_no");

                    b.Property<int>("BankCode")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_nt_agnt_bank_code");

                    b.Property<int>("BankName")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_nt_agnt_bank_name");

                    b.Property<int>("BranchCode")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_nt_agnt_branch_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_nt_agnt_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_nt_agnt_created_by");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_nt_agnt_emp_id");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_nt_agnt_status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_nt_agnt_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_nt_agnt_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("hr_pf_net_salary_agent", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.OtherRemittanceAgent", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_or_agnt_id");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_or_agnt_account_no");

                    b.Property<DateTime?>("AgreDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_pf_or_agnt_agre_date");

                    b.Property<decimal?>("AgreMinimumAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_or_agnt_agre_min_amount");

                    b.Property<int>("BankCode")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_or_agnt_bank_code");

                    b.Property<int>("BankName")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_or_agnt_bank_name");

                    b.Property<int>("BranchCode")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_or_agnt_branch_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_or_agnt_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_or_agnt_created_by");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_or_agnt_emp_id");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_or_agnt_status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_or_agnt_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_or_agnt_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("hr_pf_other_remittance_agent", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SalaryInfo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_saly_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_created_by");

                    b.Property<int?>("DaysPayRate")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_days_pay_rate");

                    b.Property<int?>("ETFRate")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_etf_rate");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_emp_id");

                    b.Property<int?>("EmployeePSPFRate")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_emp_pspf_rate");

                    b.Property<int?>("LocalAuthoritiyPSPFRate")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_la_pspf_rate");

                    b.Property<int?>("OTRate")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_ot_rate");

                    b.Property<int?>("PSPFRate")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_pspf_rate");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_saly_status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_saly_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_updated_by");

                    b.Property<int?>("WAndOPRate")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_saly_w_op_rates");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("hr_pf_salary_info", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SalaryStructureData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_salst_dt_id");

                    b.Property<decimal?>("FirstSlab")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_salst_dt_first_slab");

                    b.Property<decimal?>("FourthSlab")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_salst_dt_fourth_slab");

                    b.Property<decimal?>("InitialStep")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_salst_dt_initial_step");

                    b.Property<decimal?>("Maximum")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_salst_dt_maximum");

                    b.Property<string>("SalaryCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_salst_dt_salary_code");

                    b.Property<decimal?>("SecondSlab")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_salst_dt_second_slab");

                    b.Property<string>("ServiceCategory")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_salst_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_salst_dt_status");

                    b.Property<decimal?>("ThirdSlab")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_salst_dt_third_slab");

                    b.Property<int?>("Years1")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_salst_dt_years1");

                    b.Property<int?>("Years2")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_salst_dt_years2");

                    b.Property<int?>("Years3")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_salst_dt_years3");

                    b.Property<int?>("Years4")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_salst_dt_years4");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_salary_structure_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstSlab = 250.00m,
                            FourthSlab = 330.00m,
                            InitialStep = 24250.00m,
                            Maximum = 36410.00m,
                            SalaryCode = "PL 1-2016",
                            SecondSlab = 270.00m,
                            ServiceCategory = "Primary Level Unskilled",
                            Status = 1,
                            ThirdSlab = 300.00m,
                            Years1 = 10,
                            Years2 = 10,
                            Years3 = 10,
                            Years4 = 12
                        },
                        new
                        {
                            Id = 2,
                            FirstSlab = 270.00m,
                            FourthSlab = 350.00m,
                            InitialStep = 25250.00m,
                            Maximum = 38450.00m,
                            SalaryCode = "PL 2-2016",
                            SecondSlab = 300.00m,
                            ServiceCategory = "Primary Level Semi-skilled",
                            Status = 1,
                            ThirdSlab = 330.00m,
                            Years1 = 10,
                            Years2 = 10,
                            Years3 = 10,
                            Years4 = 12
                        },
                        new
                        {
                            Id = 3,
                            FirstSlab = 270.00m,
                            FourthSlab = 350.00m,
                            InitialStep = 25790.00m,
                            Maximum = 38990.00m,
                            SalaryCode = "PL 3-2016",
                            SecondSlab = 300.00m,
                            ServiceCategory = "Primary Level Skilled",
                            Status = 1,
                            ThirdSlab = 330.00m,
                            Years1 = 10,
                            Years2 = 10,
                            Years3 = 10,
                            Years4 = 12
                        },
                        new
                        {
                            Id = 4,
                            FirstSlab = 300.00m,
                            FourthSlab = 660.00m,
                            InitialStep = 27140.00m,
                            Maximum = 45540.00m,
                            SalaryCode = "MN 1-2016",
                            SecondSlab = 350.00m,
                            ServiceCategory = "Management Assistants Seg 2",
                            Status = 1,
                            ThirdSlab = 495.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 5,
                            FirstSlab = 300.00m,
                            FourthSlab = 660.00m,
                            InitialStep = 28940.00m,
                            Maximum = 47990.00m,
                            SalaryCode = "MN 2-2016",
                            SecondSlab = 350.00m,
                            ServiceCategory = "Management Assistants Seg 1",
                            Status = 1,
                            ThirdSlab = 560.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 6,
                            FirstSlab = 445.00m,
                            FourthSlab = 750.00m,
                            InitialStep = 31040.00m,
                            Maximum = 57550.00m,
                            SalaryCode = "MN 3-2016",
                            SecondSlab = 660.00m,
                            ServiceCategory = "MA Supervisory Non-tech / Tech",
                            Status = 1,
                            ThirdSlab = 730.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 7,
                            FirstSlab = 445.00m,
                            FourthSlab = 750.00m,
                            InitialStep = 31490.00m,
                            Maximum = 54250.00m,
                            SalaryCode = "MN 4-2016",
                            SecondSlab = 660.00m,
                            ServiceCategory = "Associate Officer",
                            Status = 1,
                            ThirdSlab = 730.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 5
                        },
                        new
                        {
                            Id = 8,
                            FirstSlab = 660.00m,
                            InitialStep = 34605.00m,
                            Maximum = 63460.00m,
                            SalaryCode = "MN 5-2016",
                            SecondSlab = 755.00m,
                            ServiceCategory = "Field/Office based Officer Seg 2",
                            Status = 1,
                            ThirdSlab = 930.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 15
                        },
                        new
                        {
                            Id = 9,
                            FirstSlab = 660.00m,
                            InitialStep = 36585.00m,
                            Maximum = 65440.00m,
                            SalaryCode = "MN 6-2016",
                            SecondSlab = 755.00m,
                            ServiceCategory = "Field/Office based Officer Seg 1",
                            Status = 1,
                            ThirdSlab = 930.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 15
                        },
                        new
                        {
                            Id = 10,
                            FirstSlab = 755.00m,
                            InitialStep = 41580.00m,
                            Maximum = 68425.00m,
                            SalaryCode = "MN 7-2016",
                            SecondSlab = 1030.00m,
                            ServiceCategory = "Management Assistants Supra",
                            Status = 1,
                            Years1 = 11,
                            Years2 = 18
                        },
                        new
                        {
                            Id = 11,
                            FirstSlab = 300.00m,
                            FourthSlab = 660.00m,
                            InitialStep = 29840.00m,
                            Maximum = 48890.00m,
                            SalaryCode = "MT 1-2016",
                            SecondSlab = 350.00m,
                            ServiceCategory = "MA Technical Seg 3",
                            Status = 1,
                            ThirdSlab = 560.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 12,
                            FirstSlab = 350.00m,
                            FourthSlab = 660.00m,
                            InitialStep = 30140.00m,
                            Maximum = 49910.00m,
                            SalaryCode = "MT 2-2016",
                            SecondSlab = 370.00m,
                            ServiceCategory = "MA Technical Seg 2",
                            Status = 1,
                            ThirdSlab = 560.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 13,
                            FirstSlab = 350.00m,
                            FourthSlab = 660.00m,
                            InitialStep = 30840.00m,
                            Maximum = 50610.00m,
                            SalaryCode = "MT 3-2016",
                            SecondSlab = 370.00m,
                            ServiceCategory = "MA Technical Seg 1",
                            Status = 1,
                            ThirdSlab = 560.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 14,
                            FirstSlab = 445.00m,
                            FourthSlab = 750.00m,
                            InitialStep = 31190.00m,
                            Maximum = 57700.00m,
                            SalaryCode = "MT 4-2016",
                            SecondSlab = 660.00m,
                            ServiceCategory = "Para Medical Services Seg 3",
                            Status = 1,
                            ThirdSlab = 730.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 15,
                            FirstSlab = 445.00m,
                            FourthSlab = 750.00m,
                            InitialStep = 31635.00m,
                            Maximum = 58145.00m,
                            SalaryCode = "MT 5-2016",
                            SecondSlab = 660.00m,
                            ServiceCategory = "Para Medical Services Seg 2",
                            Status = 1,
                            ThirdSlab = 730.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 16,
                            FirstSlab = 445.00m,
                            FourthSlab = 750.00m,
                            InitialStep = 32080.00m,
                            Maximum = 58590.00m,
                            SalaryCode = "MT 6-2016",
                            SecondSlab = 660.00m,
                            ServiceCategory = "PSM/Para Medical Services Seg 1",
                            Status = 1,
                            ThirdSlab = 730.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 17,
                            FirstSlab = 445.00m,
                            FourthSlab = 750.00m,
                            InitialStep = 32525.00m,
                            Maximum = 59035.00m,
                            SalaryCode = "MT 7-2016",
                            SecondSlab = 660.00m,
                            ServiceCategory = "Nurses",
                            Status = 1,
                            ThirdSlab = 730.00m,
                            Years1 = 10,
                            Years2 = 11,
                            Years3 = 10,
                            Years4 = 10
                        },
                        new
                        {
                            Id = 18,
                            FirstSlab = 1345.00m,
                            InitialStep = 50200.00m,
                            Maximum = 76690.00m,
                            SalaryCode = "MT 8-2016",
                            SecondSlab = 1630.00m,
                            ServiceCategory = "Nurses, PSM, PMS Spl. Grade",
                            Status = 1,
                            Years1 = 10,
                            Years2 = 8
                        },
                        new
                        {
                            Id = 19,
                            FirstSlab = 1335.00m,
                            InitialStep = 47615.00m,
                            Maximum = 110895.00m,
                            SalaryCode = "SL 1-2016",
                            SecondSlab = 1630.00m,
                            ServiceCategory = "Executive",
                            Status = 1,
                            ThirdSlab = 2170.00m,
                            Years1 = 10,
                            Years2 = 8,
                            Years3 = 17
                        },
                        new
                        {
                            Id = 20,
                            FirstSlab = 1335.00m,
                            FourthSlab = 2170.00m,
                            InitialStep = 52955.00m,
                            Maximum = 104355.00m,
                            SalaryCode = "SL 2-2016",
                            SecondSlab = 1345.00m,
                            ServiceCategory = "Medical Officers",
                            Status = 1,
                            ThirdSlab = 1630.00m,
                            Years1 = 3,
                            Years2 = 7,
                            Years3 = 2,
                            Years4 = 16
                        },
                        new
                        {
                            Id = 21,
                            FirstSlab = 2700.00m,
                            InitialStep = 88000.00m,
                            Maximum = 120400.00m,
                            SalaryCode = "SL 3-2016",
                            ServiceCategory = "Senior executive/MO Specialists",
                            Status = 1,
                            Years1 = 12
                        },
                        new
                        {
                            Id = 22,
                            FirstSlab = 2925.00m,
                            InitialStep = 98650.00m,
                            Maximum = 133750.00m,
                            SalaryCode = "SL 4-2016",
                            ServiceCategory = "Secretaries",
                            Status = 1,
                            Years1 = 12
                        },
                        new
                        {
                            Id = 23,
                            FirstSlab = 1335.00m,
                            InitialStep = 58295.00m,
                            Maximum = 105670.00m,
                            SalaryCode = "SL 5-2016",
                            SecondSlab = 1630.00m,
                            ServiceCategory = "Law Officers",
                            Status = 1,
                            ThirdSlab = 2170.00m,
                            Years1 = 5,
                            Years2 = 5,
                            Years3 = 15
                        },
                        new
                        {
                            Id = 24,
                            FirstSlab = 2750.00m,
                            InitialStep = 106950.00m,
                            Maximum = 120700.00m,
                            SalaryCode = "SL 7-2016",
                            ServiceCategory = "Addl. SG",
                            Status = 1,
                            Years1 = 5
                        },
                        new
                        {
                            Id = 25,
                            FirstSlab = 300.00m,
                            InitialStep = 27740.00m,
                            Maximum = 33090.00m,
                            SalaryCode = "GE 1-2016",
                            SecondSlab = 380.00m,
                            ServiceCategory = "Sri Lanka Teachers Service",
                            Status = 1,
                            ThirdSlab = 445.00m,
                            Years1 = 6,
                            Years2 = 7,
                            Years3 = 2
                        },
                        new
                        {
                            Id = 26,
                            FirstSlab = 495.00m,
                            FourthSlab = 1335.00m,
                            InitialStep = 33300.00m,
                            Maximum = 71650.00m,
                            SalaryCode = "GE 2-2016",
                            SecondSlab = 680.00m,
                            ServiceCategory = "Sri Lanka Teachers Service",
                            Status = 1,
                            ThirdSlab = 825.00m,
                            Years1 = 5,
                            Years2 = 5,
                            Years3 = 7,
                            Years4 = 20
                        },
                        new
                        {
                            Id = 27,
                            FirstSlab = 680.00m,
                            FourthSlab = 1650.00m,
                            InitialStep = 35280.00m,
                            Maximum = 82775.00m,
                            SalaryCode = "GE 4-2016",
                            SecondSlab = 825.00m,
                            ServiceCategory = "Sri Lanka Principals Service",
                            Status = 1,
                            ThirdSlab = 1335.00m,
                            Years1 = 7,
                            Years2 = 6,
                            Years3 = 11,
                            Years4 = 14
                        },
                        new
                        {
                            Id = 28,
                            FirstSlab = 660.00m,
                            InitialStep = 35195.00m,
                            Maximum = 64150.00m,
                            SalaryCode = "MP 1-2016",
                            SecondSlab = 745.00m,
                            ServiceCategory = "Medical Practitioners",
                            Status = 1,
                            ThirdSlab = 1135.00m,
                            Years1 = 12,
                            Years2 = 13,
                            Years3 = 10
                        },
                        new
                        {
                            Id = 29,
                            FirstSlab = 1345.00m,
                            InitialStep = 56205.00m,
                            Maximum = 82980.00m,
                            SalaryCode = "MP 2-2016",
                            SecondSlab = 1630.00m,
                            ServiceCategory = "Medical Practitioners Spl. Gr.",
                            Status = 1,
                            Years1 = 9,
                            Years2 = 9
                        },
                        new
                        {
                            Id = 30,
                            FirstSlab = 300.00m,
                            InitialStep = 29540.00m,
                            Maximum = 41630.00m,
                            SalaryCode = "RS 1-2016",
                            SecondSlab = 370.00m,
                            ServiceCategory = "Police / Regulatory Services",
                            Status = 1,
                            Years1 = 7,
                            Years2 = 27
                        },
                        new
                        {
                            Id = 31,
                            FirstSlab = 370.00m,
                            InitialStep = 32010.00m,
                            Maximum = 43755.00m,
                            SalaryCode = "RS 2-2016",
                            SecondSlab = 495.00m,
                            ServiceCategory = "Police / Regulatory Services",
                            Status = 1,
                            Years1 = 9,
                            Years2 = 17
                        },
                        new
                        {
                            Id = 32,
                            FirstSlab = 370.00m,
                            InitialStep = 32790.00m,
                            Maximum = 52870.00m,
                            SalaryCode = "RS 3-2016",
                            SecondSlab = 495.00m,
                            ServiceCategory = "Police / Regulatory Services",
                            Status = 1,
                            ThirdSlab = 660.00m,
                            Years1 = 7,
                            Years2 = 2,
                            Years3 = 25
                        },
                        new
                        {
                            Id = 33,
                            FirstSlab = 660.00m,
                            InitialStep = 37030.00m,
                            Maximum = 52870.00m,
                            SalaryCode = "RS 4-2016",
                            ServiceCategory = "Police / Regulatory Services",
                            Status = 1,
                            Years1 = 24
                        },
                        new
                        {
                            Id = 34,
                            FirstSlab = 775.00m,
                            InitialStep = 42425.00m,
                            Maximum = 55600.00m,
                            SalaryCode = "RS 5-2016",
                            ServiceCategory = "Police / Regulatory Services",
                            Status = 1,
                            Years1 = 17
                        },
                        new
                        {
                            Id = 35,
                            FirstSlab = 2925.00m,
                            InitialStep = 131500.00m,
                            Maximum = 146125.00m,
                            SalaryCode = "SF 1-2016",
                            ServiceCategory = "Solicitor General",
                            Status = 1,
                            Years1 = 5
                        },
                        new
                        {
                            Id = 36,
                            FirstSlab = 2925.00m,
                            InitialStep = 139000.00m,
                            Maximum = 153625.00m,
                            SalaryCode = "SF 3-2016",
                            ServiceCategory = "Attorney General",
                            Status = 1,
                            Years1 = 5
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ServiceInfo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_id");

                    b.Property<int?>("AgraharaCategoryID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_agrahara_category");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_pf_si_appointment_date");

                    b.Property<string>("AppointmentLetterNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_appointment_letter_number");

                    b.Property<int>("AppointmentTypeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_appointment_type");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hr_pf_si_basic_salary");

                    b.Property<int>("Class")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_class");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_si_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_created_by");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_emp_id");

                    b.Property<int>("FundingSourceID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_funding_source");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_grade");

                    b.Property<DateTime>("IncrementDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_pf_si_increment_date");

                    b.Property<int>("JobTitleID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_post_name");

                    b.Property<string>("PSPFNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_pspf_number");

                    b.Property<string>("PensionNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_pension_number");

                    b.Property<int>("ReimbursedPercentageID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_reimbursed_pct");

                    b.Property<string>("SalaryStep")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_salary_step");

                    b.Property<int>("SalaryStepLevelID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_salary_step_level");

                    b.Property<int>("SalaryStructureID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_salary_structure_id");

                    b.Property<int>("ServiceLevelID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_level");

                    b.Property<int>("ServiceTypeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_service_id");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_si_status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_si_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_updated_by");

                    b.Property<string>("WOPNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_wop_number");

                    b.HasKey("Id");

                    b.HasIndex("AgraharaCategoryID");

                    b.HasIndex("AppointmentTypeID");

                    b.HasIndex("Class");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("FundingSourceID");

                    b.HasIndex("Grade");

                    b.HasIndex("JobTitleID");

                    b.HasIndex("SalaryStructureID");

                    b.HasIndex("ServiceTypeID");

                    b.ToTable("hr_pf_service_info", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ServiceTypeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_st_dt_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_st_dt_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_st_dt_name");

                    b.Property<int>("SalaryStructureDataId")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_st_sctgy_dt_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_st_dt_status");

                    b.HasKey("Id");

                    b.HasIndex("SalaryStructureDataId");

                    b.ToTable("hr_pf_service_type_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SpouserInfo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_si_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_created_by");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hr_pf_si_dob");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_emp_id");

                    b.Property<int?>("GnDivision")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_gn_division");

                    b.Property<string>("JobTitle")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_job_title");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_name");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_si_status_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_si_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_si_updated_by");

                    b.Property<string>("WorkPlace")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_si_work_place");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("hr_pf_spouser_info", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SupportingDocTypeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_sdt_dt_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_sdt_dt_name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_sdt_dt_status");

                    b.HasKey("Id");

                    b.ToTable("hr_pf_supporting_doc_type_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "National Identity Card (NIC)",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Birth Certificate",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marriage Certificate",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Educational Certificate",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Appointment Letter",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "EB",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            Name = "Child's Birth Certificate",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Other Certificate",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SupportingDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_sd_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_sd_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_sd_created_by");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hr_pf_sd_document_path");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_sd_emp_id");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("hr_pf_sd_status_id");

                    b.Property<int>("SupportingDocTypeID")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_sd_type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("hr_pf_sd_updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("hr_pf_sd_updated_by");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("SupportingDocTypeID");

                    b.ToTable("hr_pf_supporting_document", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceB", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.LoanManagement.AdvanceBTypeData", "AdvanceBTypeData")
                        .WithMany()
                        .HasForeignKey("AdvanceBTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Guarantor1")
                        .WithMany()
                        .HasForeignKey("Guarantor1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Guarantor2")
                        .WithMany()
                        .HasForeignKey("Guarantor2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AdvanceBTypeData");

                    b.Navigation("Employee");

                    b.Navigation("Guarantor1");

                    b.Navigation("Guarantor2");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBAttachment", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.LoanManagement.AdvanceB", "AdvanceB")
                        .WithMany("AdvanceBAttachments")
                        .HasForeignKey("AdvanceBId");

                    b.Navigation("AdvanceB");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBSettlement", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.LoanManagement.AdvanceB", "AdvanceB")
                        .WithMany("AdvanceBSettlements")
                        .HasForeignKey("AdvanceBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvanceB");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBTypeLedgerMapping", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.LoanManagement.AdvanceBTypeData", "AdvanceBTypeData")
                        .WithMany("AdvanceBTypeLedgerMapping")
                        .HasForeignKey("AdvanceBTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdvanceBTypeData");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.Address", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_addrs_emp");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ChildInfo", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("ChildrenInfos")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_ci_emp");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.Employee", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.CarderStatusData", "CarderStatusDatas")
                        .WithMany("Employees")
                        .HasForeignKey("CarderStausID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_emp_cs_dt_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.EmployeeTypeData", "EmployeeTypeDatas")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_emp_typ_dt_id");

                    b.Navigation("CarderStatusDatas");

                    b.Navigation("EmployeeTypeDatas");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.JobTitleData", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.ServiceTypeData", "ServiceTypeData")
                        .WithMany("JobTitles")
                        .HasForeignKey("ServiceTypeDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_std_dt_id");

                    b.Navigation("ServiceTypeData");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.NetSalaryAgent", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("NetSalaryAgents")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_nt_agnt_emp");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.OtherRemittanceAgent", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("OtherRemittanceAgents")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_or_agnt_emp");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SalaryInfo", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("SalaryInfos")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_salin_emp");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ServiceInfo", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.AgraharaCategoryData", "AgraharaCategoryDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("AgraharaCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_si_ac_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.AppointmentTypeData", "AppointmentTypeDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("AppointmentTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_si_Appt_dt_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.ClassLevelData", "ClassLevelDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("Class")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_si_cl_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_serin_emp");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.FundingSourceData", "FundingSourceDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("FundingSourceID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_si_fs_dt_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.GradeLevelData", "GradeLevelDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("Grade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_si_gl_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.JobTitleData", "JobTitleDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("JobTitleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_si_jt_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.SalaryStructureData", "SalaryStructureDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("SalaryStructureID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_si_sc_id");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.ServiceTypeData", "ServiceTypeDatas")
                        .WithMany("ServiceInfos")
                        .HasForeignKey("ServiceTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_si_st_id");

                    b.Navigation("AgraharaCategoryDatas");

                    b.Navigation("AppointmentTypeDatas");

                    b.Navigation("ClassLevelDatas");

                    b.Navigation("Employee");

                    b.Navigation("FundingSourceDatas");

                    b.Navigation("GradeLevelDatas");

                    b.Navigation("JobTitleDatas");

                    b.Navigation("SalaryStructureDatas");

                    b.Navigation("ServiceTypeDatas");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ServiceTypeData", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.SalaryStructureData", "SalaryStructureData")
                        .WithMany("ServiceTypes")
                        .HasForeignKey("SalaryStructureDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_ssd_dt_id");

                    b.Navigation("SalaryStructureData");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SpouserInfo", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("SpouserInfos")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_si_emp");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SupportingDocument", b =>
                {
                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.Employee", "Employee")
                        .WithMany("SupportingDocuments")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_hr_pf_sd_emp");

                    b.HasOne("CAT20.Core.Models.HRM.PersonalFile.SupportingDocTypeData", "SupportingDocTypeDatas")
                        .WithMany("SupportingDocuments")
                        .HasForeignKey("SupportingDocTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hr_pf_sdt_dt_id");

                    b.Navigation("Employee");

                    b.Navigation("SupportingDocTypeDatas");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceB", b =>
                {
                    b.Navigation("AdvanceBAttachments");

                    b.Navigation("AdvanceBSettlements");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.LoanManagement.AdvanceBTypeData", b =>
                {
                    b.Navigation("AdvanceBTypeLedgerMapping");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.AgraharaCategoryData", b =>
                {
                    b.Navigation("ServiceInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.AppointmentTypeData", b =>
                {
                    b.Navigation("ServiceInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.CarderStatusData", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ClassLevelData", b =>
                {
                    b.Navigation("ServiceInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.Employee", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("ChildrenInfos");

                    b.Navigation("NetSalaryAgents");

                    b.Navigation("OtherRemittanceAgents");

                    b.Navigation("SalaryInfos");

                    b.Navigation("ServiceInfos");

                    b.Navigation("SpouserInfos");

                    b.Navigation("SupportingDocuments");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.EmployeeTypeData", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.FundingSourceData", b =>
                {
                    b.Navigation("ServiceInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.GradeLevelData", b =>
                {
                    b.Navigation("ServiceInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.JobTitleData", b =>
                {
                    b.Navigation("ServiceInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SalaryStructureData", b =>
                {
                    b.Navigation("ServiceInfos");

                    b.Navigation("ServiceTypes");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.ServiceTypeData", b =>
                {
                    b.Navigation("JobTitles");

                    b.Navigation("ServiceInfos");
                });

            modelBuilder.Entity("CAT20.Core.Models.HRM.PersonalFile.SupportingDocTypeData", b =>
                {
                    b.Navigation("SupportingDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}

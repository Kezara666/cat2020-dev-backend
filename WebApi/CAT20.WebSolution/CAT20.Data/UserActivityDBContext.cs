// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using CAT20.Core.Models.User;
using Microsoft.Extensions.Hosting;
using System.ComponentModel.DataAnnotations.Schema;

namespace CAT20.Data
{
    public partial class UserActivityDBContext : DbContext
    {
        public UserActivityDBContext()
        {
        }

        public UserActivityDBContext(DbContextOptions<UserActivityDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<UserRecoverQuestion> UserRecoverQuestions { get; set; }
        public virtual DbSet<AuditLogUser> AuditLogUsers { get; set; }
        public virtual DbSet<Rule> Rules { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupRule> GroupRules { get; set; }
        public virtual DbSet<GroupUser> GroupUsers { get; set; }
        public virtual DbSet<UserLoginActivity> UserLoginActivitys { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("utf8mb4_sinhala_ci")
                .HasCharSet("utf8mb4");

            #region User Detail

            modelBuilder.Entity<UserDetail>(entity =>
            {
                entity.HasKey(e => e.ID)
                    .HasName("PRIMARY");

                entity.ToTable("user_details");

                entity.HasCharSet("utf8mb4")
                    .UseCollation("utf8mb4_sinhala_ci");

                entity.Property(e => e.ID).HasColumnName("ud_id");

                entity.Property(e => e.ActiveStatus).HasColumnName("ud_active_status");

                entity.Property(e => e.Answer1)
                    .HasMaxLength(255)
                    .HasColumnName("ud_answer1");

                entity.Property(e => e.Answer2)
                    .HasMaxLength(255)
                    .HasColumnName("ud_answer2");

                entity.Property(e => e.Birthday).HasColumnName("ud_birthday");

                entity.Property(e => e.ContactNo).HasColumnName("ud_contact_no");

                entity.Property(e => e.GenderID)
                    .HasColumnName("ud_gender_id")
                    .HasComment("control db fk");

                entity.Property(e => e.NameInFull)
                    .HasMaxLength(255)
                    .HasColumnName("ud_name_in_full");

                entity.Property(e => e.NameWithInitials)
                    .HasMaxLength(255)
                    .HasColumnName("ud_name_with_initials");

                entity.Property(e => e.NIC)
                    .HasMaxLength(255)
                    .HasColumnName("ud_nic");

                entity.Property(e => e.OfficeID).HasColumnName("ud_office_id");

                entity.Property(e => e.Password)
                    .HasMaxLength(255)
                    .HasColumnName("ud_password");

                entity.Property(e => e.Pin)
                    .HasMaxLength(255)
                    .HasColumnName("ud_pin");

                entity.Property(e => e.ProfilePicPath)
                    .HasMaxLength(255)
                    .HasColumnName("ud_profile_pic_path");

                entity.Property(e => e.UserSignPath)
                   .HasMaxLength(255)
                   .HasColumnName("ud_user_sign_path");

                entity.Property(e => e.Q1Id).HasColumnName("ud_q1_id");

                entity.Property(e => e.Q2Id).HasColumnName("ud_q2_id");

                entity.Property(e => e.SabhaID).HasColumnName("ud_sabha_id");

                entity.Property(e => e.Username)
                    .HasMaxLength(255)
                    .HasColumnName("ud_username");

                entity.Property(e => e.IsAdmin).HasColumnName("is_admin");

                entity.Ignore(wp => wp.ProfilePic);
                entity.Ignore(wp => wp.UserSign);
            });

            #endregion

            #region User Recover Question

            modelBuilder.Entity<UserRecoverQuestion>(entity =>
            {
                entity.ToTable("user_recover_questions");

                entity.HasCharSet("utf8mb4")
                    .UseCollation("utf8mb4_sinhala_ci");

                entity.Property(e => e.ID)
                    .ValueGeneratedNever()
                    .HasColumnName("user_recover_questions_id");

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("user_recover_questions");
            });

            #endregion

            #region Group

            modelBuilder.Entity<Group>(entity =>
            {
                entity.HasCharSet("utf8mb4").UseCollation("utf8mb4_sinhala_ci");
                entity.ToTable("Groups");

                entity.HasKey(e => e.ID)
                    .HasName("PRIMARY");

                #region Property

                entity.Property(e => e.ID).HasColumnName("ID");
                entity.Property(e => e.Description).HasColumnName("Description");
                entity.Property(e => e.IsActive).HasColumnName("IsActive");
                entity.Property(e => e.SabhaId).HasColumnName("SabhaID");
                entity.Property(e => e.UserCreatedID).HasColumnName("UserCreatedID");
                entity.Property(e => e.DateCreated).HasColumnName("DateCreated");
                entity.Property(e => e.DateModified).HasColumnName("DateModified");

                #endregion

                #region Relation


                #endregion

            });
            #endregion

            #region Rule

            modelBuilder.Entity<Rule>(entity =>
            {
                entity.HasCharSet("utf8mb4").UseCollation("utf8mb4_sinhala_ci");
                entity.ToTable("Rules");

                #region Property
                entity.HasKey(e => e.ID)
                    .HasName("PRIMARY");

                entity.Property(e => e.ID).HasColumnName("ID");
                entity.Property(e => e.Code).HasColumnName("Code");
                entity.Property(e => e.Description).HasColumnName("Description");
                entity.Property(e => e.Module).HasColumnName("Module");
                entity.Property(e => e.UserCreatedID).HasColumnName("UserCreatedID");
                entity.Property(e => e.DateCreated).HasColumnName("DateCreated");
                entity.Property(e => e.DateModified).HasColumnName("DateModified");

                #endregion

                #region Relation

                #endregion

            });
            #endregion

            #region Group Rule

            modelBuilder.Entity<GroupRule>(entity =>
            {
                entity.HasCharSet("utf8mb4").UseCollation("utf8mb4_sinhala_ci");
                entity.ToTable("GroupRules");

                #region Property
                entity.HasKey(e => e.ID)
                    .HasName("PRIMARY");

                entity.Property(e => e.ID).HasColumnName("ID");
                entity.Property(e => e.GroupID).HasColumnName("GroupID");
                entity.Property(e => e.RuleID).HasColumnName("RuleID");
                entity.Property(e => e.UserCreatedID).HasColumnName("UserCreatedID");
                entity.Property(e => e.DateCreated).HasColumnName("DateCreated");
                entity.Property(e => e.DateModified).HasColumnName("DateModified");

                #endregion

                #region Relation


                #endregion

            });
            #endregion

            #region Group User

            modelBuilder.Entity<GroupUser>(entity =>
            {
                entity.HasCharSet("utf8mb4").UseCollation("utf8mb4_sinhala_ci");
                entity.ToTable("GroupUsers");

                #region Property

                entity.HasKey(e => e.ID)
                    .HasName("PRIMARY");

                entity.Property(e => e.ID).HasColumnName("ID");
                entity.Property(e => e.GroupID).HasColumnName("GroupID");
                entity.Property(e => e.UserID).HasColumnName("UserID");
                entity.Property(e => e.UserCreatedID).HasColumnName("UserCreatedID");
                entity.Property(e => e.DateCreated).HasColumnName("DateCreated");
                entity.Property(e => e.DateModified).HasColumnName("DateModified");

                entity.HasIndex(e => new { e.UserID }).IsUnique(true);

                #endregion

                #region Relation


                #endregion

            });

            #endregion


            #region User Login Activity

            modelBuilder.Entity<UserLoginActivity>(entity =>
            {
                entity.HasKey(e => e.ID)
                    .HasName("PRIMARY");

                entity.ToTable("user_login_activity");

                entity.HasCharSet("utf8mb4")
                    .UseCollation("utf8mb4_sinhala_ci");

                entity.Property(e => e.ID).HasColumnName("id");

                entity.Property(e => e.Username)
                    .HasMaxLength(255)
                    .HasColumnName("username");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.LoginTime).HasColumnName("login_time");

                entity.Property(e => e.LogoutTime).HasColumnName("logout_time");

                entity.Property(e => e.IsSuccessLogin).HasColumnName("is_success_login");

                entity.Property(e => e.OfficeID).HasColumnName("office_id");

                entity.Property(e => e.SabhaID).HasColumnName("sabha_id");
                entity.Property(e => e.OperatingSystem).HasColumnName("operating_system");
                entity.Property(e => e.Browser).HasColumnName("browser");
                entity.Property(e => e.Device).HasColumnName("device");
                entity.Property(e => e.OSVersion).HasColumnName("os_version");
                entity.Property(e => e.BrowserVersion).HasColumnName("browser_version");
                entity.Property(e => e.DeviceType).HasColumnName("device_type");
                entity.Property(e => e.Orientation).HasColumnName("orientation");
                entity.Property(e => e.IpAddress).HasColumnName("ip_address");
                entity.Property(e => e.RuleName).HasColumnName("rule_name");
                entity.Property(e => e.LastActiveTime).HasColumnName("last_active_time");
            });

            #endregion

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
// <auto-generated />
using System;
using CAT20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAT20.Data.ControlDb
{
    [DbContext(typeof(ControlDbContext))]
    [Migration("20240731122622_setbankcodeprimary")]
    partial class setbankcodeprimary
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_sinhala_ci")
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("CAT20.Core.Models.Common.AuditLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TransactionID")
                        .HasColumnType("int");

                    b.Property<string>("TransactionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.AppCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_app_cat_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_app_cat_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_app_cat_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cd_app_cat_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_app_cat_updated_at");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("cd_app_category", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("res_application", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.BankBranch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_bb_id");

                    b.Property<int>("BankCode")
                        .HasColumnType("int")
                        .HasColumnName("cd_bb_bank_code");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("longtext")
                        .HasColumnName("cd_bb_branch_address");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cd_bb_branch_code");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_bb_branch_name");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_d_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cd_bb_district");

                    b.Property<string>("FaxNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cd_bb_fax_no");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("cd_d_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("TelNo1")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cd_bb_tel1");

                    b.Property<string>("TelNo2")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cd_bb_tel2");

                    b.Property<string>("TelNo3")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cd_bb_tel3");

                    b.Property<string>("TelNo4")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cd_bb_tel4");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_d_updated_at");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.HasIndex("BankCode");

                    b.ToTable("cd_bank_branches", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.BankDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_bd_id");

                    b.Property<int>("BankCode")
                        .HasColumnType("int")
                        .HasColumnName("cd_bank_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_bd_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_bd_name");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_bd_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_bd_updated_at");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.HasIndex("BankCode")
                        .IsUnique();

                    b.ToTable("cd_bank_details", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Business", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("longtext")
                        .HasColumnName("business_email");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("business_name");

                    b.Property<int?>("BusinessNatureId")
                        .HasColumnType("int")
                        .HasColumnName("business_nature");

                    b.Property<int?>("BusinessOwnerId")
                        .HasColumnType("int")
                        .HasColumnName("business_owner_id");

                    b.Property<int?>("BusinessPlaceId")
                        .HasColumnType("int")
                        .HasColumnName("business_place_id");

                    b.Property<string>("BusinessRegNo")
                        .HasColumnType("longtext")
                        .HasColumnName("business_reg_no");

                    b.Property<DateTime?>("BusinessStartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("business_start_date");

                    b.Property<int?>("BusinessSubNatureId")
                        .HasColumnType("int")
                        .HasColumnName("business_sub_nature");

                    b.Property<string>("BusinessSubOwners")
                        .HasColumnType("longtext")
                        .HasColumnName("business_sub_owners");

                    b.Property<string>("BusinessTelNo")
                        .HasColumnType("longtext")
                        .HasColumnName("business_tel_no");

                    b.Property<string>("BusinessWeb")
                        .HasColumnType("longtext")
                        .HasColumnName("business_web");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("NoOfEmployees")
                        .HasColumnType("int")
                        .HasColumnName("no_of_employees");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int?>("PropertyOwnerId")
                        .HasColumnType("int")
                        .HasColumnName("property_owner_id");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<sbyte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<int?>("TaxTypeId")
                        .HasColumnType("int")
                        .HasColumnName("tax_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("res_businesses", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.BusinessPlace", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address1")
                        .HasColumnType("longtext")
                        .HasColumnName("address_1");

                    b.Property<string>("Address2")
                        .HasColumnType("longtext")
                        .HasColumnName("address_2");

                    b.Property<string>("AssessmentNo")
                        .HasColumnType("longtext")
                        .HasColumnName("assessment_no");

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<string>("City")
                        .HasColumnType("longtext")
                        .HasColumnName("city");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("GnDivision")
                        .HasColumnType("int")
                        .HasColumnName("gn_division");

                    b.Property<int?>("PropertyOwnerId")
                        .HasColumnType("int")
                        .HasColumnName("property_owner_id");

                    b.Property<int?>("RIUserId")
                        .HasColumnType("int")
                        .HasColumnName("ri_id");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<sbyte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<int?>("Street")
                        .HasColumnType("int")
                        .HasColumnName("street");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<int?>("Ward")
                        .HasColumnType("int")
                        .HasColumnName("ward");

                    b.Property<string>("Zip")
                        .HasColumnType("longtext")
                        .HasColumnName("zip");

                    b.HasKey("Id");

                    b.ToTable("res_business_places", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.BusinessTaxes", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("AnnualValue")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("annual_value");

                    b.Property<string>("ApplicationNo")
                        .HasColumnType("longtext")
                        .HasColumnName("application_no");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<DateTime?>("ChairmanApprovedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("chairman_approved_at");

                    b.Property<int?>("ChairmanApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("chairman_approved_by");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("CurrentYear")
                        .HasColumnType("int")
                        .HasColumnName("current_year");

                    b.Property<decimal?>("LastYearValue")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("last_year_value");

                    b.Property<string>("LicenseNo")
                        .HasColumnType("longtext")
                        .HasColumnName("license_no");

                    b.Property<DateTime?>("MOHApprovedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("moh_approved_at");

                    b.Property<int?>("MOHApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("moh_approved_by");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<decimal?>("OtherCharges")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("other_charges");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<DateTime?>("SecretaryApprovedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("secretary_approved_at");

                    b.Property<int?>("SecretaryApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("secretary_approved_by");

                    b.Property<sbyte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("tax_amount");

                    b.Property<decimal?>("TaxAmountByNature")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("tax_amount_by_nature");

                    b.Property<int>("TaxState")
                        .HasColumnType("int")
                        .HasColumnName("tax_state");

                    b.Property<decimal?>("TotalTaxAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_tax_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<sbyte?>("is_chairman_approved")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_chairman_approved");

                    b.Property<sbyte?>("is_moh_approved")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_moh_approved");

                    b.Property<sbyte?>("is_secretary_approved")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_secretary_approved");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BusinessId" }, "business_taxes_FK");

                    b.ToTable("business_taxes", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.ConfigApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SessionConfigId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ConfigApplication");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.CustomerType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cdb_cus_type_id");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cdb_cus_type_name_in_english");

                    b.Property<string>("NameInSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cdb_cus_type_name_in_sinhala");

                    b.Property<string>("NameInTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cdb_cus_type_name_in_tamil");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cdb_cus_type_status");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("cdb_customer_types", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.District", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_d_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_d_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_d_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_d_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_d_name_tamil");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("int")
                        .HasColumnName("cd_d_cd_p_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cd_d_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_d_updated_at");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProvinceID" }, "fk_cd_d_cd_p_id");

                    b.ToTable("cd_district", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.DocumentSequenceNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("LastIndex")
                        .HasColumnType("int")
                        .HasColumnName("last_index");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("prefix");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("Year", "OfficeId")
                        .IsUnique();

                    b.ToTable("document_sequence_numbers", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.EmailConfiguration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("SystemMailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SystemMailPORT")
                        .HasColumnType("int");

                    b.Property<string>("SystemMailPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SystemMailSMTP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SystemURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("EmailConfigurations");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.EmailOutBox", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Bc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedByID")
                        .HasColumnType("int");

                    b.Property<int>("EmailSendAttempts")
                        .HasColumnType("int");

                    b.Property<int>("EmailStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsBodyHtml")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MailContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("ID");

                    b.ToTable("EmailOutBoxes");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Gender", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_gender_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_gender");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cd_status");

                    b.HasKey("ID");

                    b.ToTable("cd_gender", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.GnDivisions", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "OfficeId" }, "cd_gn_divisions_FK");

                    b.ToTable("cd_gn_divisions", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Language", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("cd_languages_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_languages_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cd_language_status");

                    b.HasKey("ID");

                    b.ToTable("cd_languages", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Month", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("cd_month_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_month");

                    b.HasKey("ID");

                    b.ToTable("cd_month", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Office", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_o_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cd_o_code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_o_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("cd_o_create_date");

                    b.Property<float?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("cd_o_latitude");

                    b.Property<float?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("cd_o_longitude");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_o_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_o_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_o_name_tamil");

                    b.Property<int>("OfficeTypeID")
                        .HasColumnType("int")
                        .HasColumnName("cd_o_office_type_id");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("cd_o_cd_s_id");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasColumnName("cd_o_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_o_updated_at");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SabhaID" }, "fk_cd_o_cd_s_id");

                    b.HasIndex(new[] { "OfficeTypeID" }, "fk_cd_o_office_type_id");

                    b.ToTable("cd_office", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.OfficeType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_ot_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_ot_name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cd_ot_status");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("cd_office_type", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<sbyte?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("BusinessRegNo")
                        .HasColumnType("longtext")
                        .HasColumnName("business_reg_no");

                    b.Property<string>("City")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<int?>("GnDivisionId")
                        .HasColumnType("int")
                        .HasColumnName("gn_division_id");

                    b.Property<int?>("IsBusiness")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_business")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("IsBusinessOwner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_business_owner")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte?>("IsEditable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("is_editable")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("IsPropertyOwner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_property_owner")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte?>("IsTempory")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("is_tempory")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("mobile_number");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("NicNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nic_number");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("passport_number");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("phone_number");

                    b.Property<int?>("SabhaId")
                        .HasColumnType("int")
                        .HasColumnName("sabha_id");

                    b.Property<string>("Street1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("street_1");

                    b.Property<string>("Street2")
                        .HasColumnType("longtext")
                        .HasColumnName("street_2");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<string>("Zip")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("zip");

                    b.HasKey("Id");

                    b.HasIndex("GnDivisionId");

                    b.HasIndex(new[] { "CreatedBy" }, "res_partner_FK");

                    b.ToTable("res_partner", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.PartnerTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "res_partner_title_UN")
                        .IsUnique();

                    b.ToTable("res_partner_title", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<sbyte>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("res_payment_method", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.PaymentNbt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("AmountPercentage")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("amount_percentage");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("res_payment_nbt", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.PaymentVat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("AmountPercentage")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("amount_percentage");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("res_payment_vat", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_p_id");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_p_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_p_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_p_name_tamil");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cd_p_status");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("cd_province", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Sabha", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_s_id");

                    b.Property<int?>("AccountSystemVersionId")
                        .HasColumnType("int")
                        .HasColumnName("cd_s_account_system_versionid");

                    b.Property<string>("AddressEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_address_english");

                    b.Property<string>("AddressSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_address_sinhala");

                    b.Property<string>("AddressTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_address_tamil");

                    b.Property<string>("ChairmanSignPath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_chairman_sign_path");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_s_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("cd_s_create_date");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("int")
                        .HasColumnName("cd_s_cd_d_id");

                    b.Property<int?>("IsFinalAccountsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_s_is_final_accounts_enabled")
                        .HasDefaultValueSql("'0'");

                    b.Property<float?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("cd_s_latitude");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_logo_path");

                    b.Property<float?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("cd_s_longitude");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_name_english");

                    b.Property<string>("NameSinhala")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_name_sinhala");

                    b.Property<string>("NameTamil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_name_tamil");

                    b.Property<int?>("SabhaType")
                        .HasColumnType("int")
                        .HasColumnName("cd_s_sabha_type");

                    b.Property<string>("SecretarySignPath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_secretary_sign_path");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasColumnName("cd_s_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Telephone1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_tp_no1");

                    b.Property<string>("Telephone2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cd_s_tp_no2");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_s_updated_at");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DistrictID" }, "fk_cd_s_cd_d_id");

                    b.ToTable("cd_sabha", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.SelectedLanguage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_selected_languages_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_selected_languages_created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("LanguageID")
                        .HasColumnType("int")
                        .HasColumnName("cd_selected_languages_lang_id");

                    b.Property<int?>("SabhaID")
                        .HasColumnType("int")
                        .HasColumnName("cd_selected_languages_sabha_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("cd_selected_languages_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("cd_selected_languages_updated_at");

                    b.HasKey("ID");

                    b.ToTable("cd_selected_languages", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<sbyte>("Active")
                        .HasColumnType("tinyint")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("module");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("office_id");

                    b.Property<int>("Rescue")
                        .HasColumnType("int")
                        .HasColumnName("rescue");

                    b.Property<DateTime?>("RescueStartedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("rescue_started_at");

                    b.Property<DateOnly>("SessionDate")
                        .HasColumnType("date")
                        .HasColumnName("session_date");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime")
                        .HasColumnName("start_at");

                    b.Property<DateTime?>("StopAt")
                        .HasColumnType("datetime")
                        .HasColumnName("stop_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId", "SessionDate")
                        .IsUnique();

                    b.ToTable("ir_session", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.SMSConfiguration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiEndPoint")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ApiToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SabhaId")
                        .HasColumnType("int");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("SMSConfigurations");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.SMSOutBox", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Module")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SMSContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SMSSendAttempts")
                        .HasColumnType("int");

                    b.Property<int>("SMSStatus")
                        .HasColumnType("int");

                    b.Property<int>("SabhaID")
                        .HasColumnType("int");

                    b.Property<string>("SenderId")
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("ID");

                    b.ToTable("SMSOutBoxes");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.TaxType", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tax_type_name");

                    b.Property<int>("IsMainTax")
                        .HasColumnType("int")
                        .HasColumnName("is_main_tax");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("ID");

                    b.ToTable("tax_types", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Year", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("cd_year_id");

                    b.Property<int>("Description")
                        .HasColumnType("int")
                        .HasColumnName("cd_year");

                    b.HasKey("ID");

                    b.ToTable("cd_year", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_sinhala_ci");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PartnerMobile", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("mobile_no");

                    b.Property<string>("NIC")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nic_number");

                    b.Property<string>("NickName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nick_name");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("PartnerId");

                    b.HasIndex("MobileNo", "PartnerId")
                        .IsUnique();

                    b.ToTable("partner_mobile", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PermittedThirdPartyAssessments", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("assmt_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("partner_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("PartnerId", "AssessmentId")
                        .IsUnique();

                    b.ToTable("ptnr_permitted_trdparty_assmnts", (string)null);
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.BankBranch", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.BankDetail", "Bank")
                        .WithMany("bankBranch")
                        .HasForeignKey("BankCode")
                        .HasPrincipalKey("BankCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.BusinessTaxes", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.Business", "Business")
                        .WithMany("BusinessTaxes")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("business_taxes_FK");

                    b.Navigation("Business");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.ConfigApplication", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.Application", "Application")
                        .WithMany("ConfigApplication")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.District", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.Province", "province")
                        .WithMany("district")
                        .HasForeignKey("ProvinceID")
                        .IsRequired()
                        .HasConstraintName("fk_cd_d_cd_p_id");

                    b.Navigation("province");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Office", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.OfficeType", "officeType")
                        .WithMany("office")
                        .HasForeignKey("OfficeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_o_office_type_id");

                    b.HasOne("CAT20.Core.Models.Control.Sabha", "sabha")
                        .WithMany("office")
                        .HasForeignKey("SabhaID")
                        .HasConstraintName("fk_cd_o_cd_s_id");

                    b.Navigation("officeType");

                    b.Navigation("sabha");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Partner", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.GnDivisions", "GnDivision")
                        .WithMany()
                        .HasForeignKey("GnDivisionId");

                    b.Navigation("GnDivision");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Sabha", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.District", "district")
                        .WithMany("sabha")
                        .HasForeignKey("DistrictID")
                        .HasConstraintName("fk_cd_s_cd_d_id");

                    b.Navigation("district");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PartnerMobile", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.Partner", "Partner")
                        .WithMany("PartnerMobiles")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_PartnerMobile_Partner_Id");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("CAT20.Core.Models.OnlienePayment.PermittedThirdPartyAssessments", b =>
                {
                    b.HasOne("CAT20.Core.Models.Control.Partner", "Partner")
                        .WithMany("PermittedThirdPartyAssessments")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Application", b =>
                {
                    b.Navigation("ConfigApplication");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.BankDetail", b =>
                {
                    b.Navigation("bankBranch");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Business", b =>
                {
                    b.Navigation("BusinessTaxes");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.District", b =>
                {
                    b.Navigation("sabha");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.OfficeType", b =>
                {
                    b.Navigation("office");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Partner", b =>
                {
                    b.Navigation("PartnerMobiles");

                    b.Navigation("PermittedThirdPartyAssessments");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Province", b =>
                {
                    b.Navigation("district");
                });

            modelBuilder.Entity("CAT20.Core.Models.Control.Sabha", b =>
                {
                    b.Navigation("office");
                });
#pragma warning restore 612, 618
        }
    }
}
